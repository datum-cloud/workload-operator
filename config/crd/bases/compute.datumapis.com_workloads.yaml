---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.4
  name: workloads.compute.datumapis.com
spec:
  group: compute.datumapis.com
  names:
    kind: Workload
    listKind: WorkloadList
    plural: workloads
    singular: workload
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    - jsonPath: .status.conditions[?(@.type=="Available")].status
      name: Available
      type: string
    - jsonPath: .status.conditions[?(@.type=="Available")].reason
      name: Reason
      type: string
    name: v1alpha
    schema:
      openAPIV3Schema:
        description: Workload is the Schema for the workloads API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: WorkloadSpec defines the desired state of Workload
            properties:
              gateway:
                description: |
                  Workload specific gateway
                properties:
                  tcpRoutes:
                    items:
                      description: TCPRouteSpec defines the desired state of TCPRoute
                      properties:
                        parentRefs:
                          description: |-
                            ParentRefs references the resources (usually Gateways) that a Route wants
                            to be attached to. Note that the referenced parent resource needs to
                            allow this for the attachment to be complete. For Gateways, that means
                            the Gateway needs to allow attachment from Routes of this kind and
                            namespace. For Services, that means the Service must either be in the same
                            namespace for a "producer" route, or the mesh implementation must support
                            and allow "consumer" routes for the referenced Service. ReferenceGrant is
                            not applicable for governing ParentRefs to Services - it is not possible to
                            create a "producer" route for a Service in a different namespace from the
                            Route.

                            There are two kinds of parent resources with "Core" support:

                            * Gateway (Gateway conformance profile)
                            * Service (Mesh conformance profile, ClusterIP Services only)

                            This API may be extended in the future to support additional kinds of parent
                            resources.

                            ParentRefs must be _distinct_. This means either that:

                            * They select different objects.  If this is the case, then parentRef
                              entries are distinct. In terms of fields, this means that the
                              multi-part key defined by `group`, `kind`, `namespace`, and `name` must
                              be unique across all parentRef entries in the Route.
                            * They do not select different objects, but for each optional field used,
                              each ParentRef that selects the same object must set the same set of
                              optional fields to different values. If one ParentRef sets a
                              combination of optional fields, all must set the same combination.

                            Some examples:

                            * If one ParentRef sets `sectionName`, all ParentRefs referencing the
                              same object must also set `sectionName`.
                            * If one ParentRef sets `port`, all ParentRefs referencing the same
                              object must also set `port`.
                            * If one ParentRef sets `sectionName` and `port`, all ParentRefs
                              referencing the same object must also set `sectionName` and `port`.

                            It is possible to separately reference multiple distinct objects that may
                            be collapsed by an implementation. For example, some implementations may
                            choose to merge compatible Gateway Listeners together. If that is the
                            case, the list of routes attached to those resources should also be
                            merged.

                            Note that for ParentRefs that cross namespace boundaries, there are specific
                            rules. Cross-namespace references are only valid if they are explicitly
                            allowed by something in the namespace they are referring to. For example,
                            Gateway has the AllowedRoutes field, and ReferenceGrant provides a
                            generic way to enable other kinds of cross-namespace reference.

                            <gateway:experimental:description>
                            ParentRefs from a Route to a Service in the same namespace are "producer"
                            routes, which apply default routing rules to inbound connections from
                            any namespace to the Service.

                            ParentRefs from a Route to a Service in a different namespace are
                            "consumer" routes, and these routing rules are only applied to outbound
                            connections originating from the same namespace as the Route, for which
                            the intended destination of the connections are a Service targeted as a
                            ParentRef of the Route.
                            </gateway:experimental:description>

                            <gateway:standard:validation:XValidation:message="sectionName must be specified when parentRefs includes 2 or more references to the same parent",rule="self.all(p1, self.all(p2, p1.group == p2.group && p1.kind == p2.kind && p1.name == p2.name && (((!has(p1.__namespace__) || p1.__namespace__ == '') && (!has(p2.__namespace__) || p2.__namespace__ == '')) || (has(p1.__namespace__) && has(p2.__namespace__) && p1.__namespace__ == p2.__namespace__ )) ? ((!has(p1.sectionName) || p1.sectionName == '') == (!has(p2.sectionName) || p2.sectionName == '')) : true))">
                            <gateway:standard:validation:XValidation:message="sectionName must be unique when parentRefs includes 2 or more references to the same parent",rule="self.all(p1, self.exists_one(p2, p1.group == p2.group && p1.kind == p2.kind && p1.name == p2.name && (((!has(p1.__namespace__) || p1.__namespace__ == '') && (!has(p2.__namespace__) || p2.__namespace__ == '')) || (has(p1.__namespace__) && has(p2.__namespace__) && p1.__namespace__ == p2.__namespace__ )) && (((!has(p1.sectionName) || p1.sectionName == '') && (!has(p2.sectionName) || p2.sectionName == '')) || (has(p1.sectionName) && has(p2.sectionName) && p1.sectionName == p2.sectionName))))">
                            <gateway:experimental:validation:XValidation:message="sectionName or port must be specified when parentRefs includes 2 or more references to the same parent",rule="self.all(p1, self.all(p2, p1.group == p2.group && p1.kind == p2.kind && p1.name == p2.name && (((!has(p1.__namespace__) || p1.__namespace__ == '') && (!has(p2.__namespace__) || p2.__namespace__ == '')) || (has(p1.__namespace__) && has(p2.__namespace__) && p1.__namespace__ == p2.__namespace__)) ? ((!has(p1.sectionName) || p1.sectionName == '') == (!has(p2.sectionName) || p2.sectionName == '') && (!has(p1.port) || p1.port == 0) == (!has(p2.port) || p2.port == 0)): true))">
                            <gateway:experimental:validation:XValidation:message="sectionName or port must be unique when parentRefs includes 2 or more references to the same parent",rule="self.all(p1, self.exists_one(p2, p1.group == p2.group && p1.kind == p2.kind && p1.name == p2.name && (((!has(p1.__namespace__) || p1.__namespace__ == '') && (!has(p2.__namespace__) || p2.__namespace__ == '')) || (has(p1.__namespace__) && has(p2.__namespace__) && p1.__namespace__ == p2.__namespace__ )) && (((!has(p1.sectionName) || p1.sectionName == '') && (!has(p2.sectionName) || p2.sectionName == '')) || ( has(p1.sectionName) && has(p2.sectionName) && p1.sectionName == p2.sectionName)) && (((!has(p1.port) || p1.port == 0) && (!has(p2.port) || p2.port == 0)) || (has(p1.port) && has(p2.port) && p1.port == p2.port))))">
                          items:
                            description: |-
                              ParentReference identifies an API object (usually a Gateway) that can be considered
                              a parent of this resource (usually a route). There are two kinds of parent resources
                              with "Core" support:

                              * Gateway (Gateway conformance profile)
                              * Service (Mesh conformance profile, ClusterIP Services only)

                              This API may be extended in the future to support additional kinds of parent
                              resources.

                              The API object must be valid in the cluster; the Group and Kind must
                              be registered in the cluster for this reference to be valid.
                            properties:
                              group:
                                default: gateway.networking.k8s.io
                                description: |-
                                  Group is the group of the referent.
                                  When unspecified, "gateway.networking.k8s.io" is inferred.
                                  To set the core API group (such as for a "Service" kind referent),
                                  Group must be explicitly set to "" (empty string).

                                  Support: Core
                                maxLength: 253
                                pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                type: string
                              kind:
                                default: Gateway
                                description: |-
                                  Kind is kind of the referent.

                                  There are two kinds of parent resources with "Core" support:

                                  * Gateway (Gateway conformance profile)
                                  * Service (Mesh conformance profile, ClusterIP Services only)

                                  Support for other resources is Implementation-Specific.
                                maxLength: 63
                                minLength: 1
                                pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                                type: string
                              name:
                                description: |-
                                  Name is the name of the referent.

                                  Support: Core
                                maxLength: 253
                                minLength: 1
                                type: string
                              namespace:
                                description: |-
                                  Namespace is the namespace of the referent. When unspecified, this refers
                                  to the local namespace of the Route.

                                  Note that there are specific rules for ParentRefs which cross namespace
                                  boundaries. Cross-namespace references are only valid if they are explicitly
                                  allowed by something in the namespace they are referring to. For example:
                                  Gateway has the AllowedRoutes field, and ReferenceGrant provides a
                                  generic way to enable any other kind of cross-namespace reference.

                                  <gateway:experimental:description>
                                  ParentRefs from a Route to a Service in the same namespace are "producer"
                                  routes, which apply default routing rules to inbound connections from
                                  any namespace to the Service.

                                  ParentRefs from a Route to a Service in a different namespace are
                                  "consumer" routes, and these routing rules are only applied to outbound
                                  connections originating from the same namespace as the Route, for which
                                  the intended destination of the connections are a Service targeted as a
                                  ParentRef of the Route.
                                  </gateway:experimental:description>

                                  Support: Core
                                maxLength: 63
                                minLength: 1
                                pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                type: string
                              port:
                                description: |-
                                  Port is the network port this Route targets. It can be interpreted
                                  differently based on the type of parent resource.

                                  When the parent resource is a Gateway, this targets all listeners
                                  listening on the specified port that also support this kind of Route(and
                                  select this Route). It's not recommended to set `Port` unless the
                                  networking behaviors specified in a Route must apply to a specific port
                                  as opposed to a listener(s) whose port(s) may be changed. When both Port
                                  and SectionName are specified, the name and port of the selected listener
                                  must match both specified values.

                                  <gateway:experimental:description>
                                  When the parent resource is a Service, this targets a specific port in the
                                  Service spec. When both Port (experimental) and SectionName are specified,
                                  the name and port of the selected port must match both specified values.
                                  </gateway:experimental:description>

                                  Implementations MAY choose to support other parent resources.
                                  Implementations supporting other types of parent resources MUST clearly
                                  document how/if Port is interpreted.

                                  For the purpose of status, an attachment is considered successful as
                                  long as the parent resource accepts it partially. For example, Gateway
                                  listeners can restrict which Routes can attach to them by Route kind,
                                  namespace, or hostname. If 1 of 2 Gateway listeners accept attachment
                                  from the referencing Route, the Route MUST be considered successfully
                                  attached. If no Gateway listeners accept attachment from this Route,
                                  the Route MUST be considered detached from the Gateway.

                                  Support: Extended
                                format: int32
                                maximum: 65535
                                minimum: 1
                                type: integer
                              sectionName:
                                description: |-
                                  SectionName is the name of a section within the target resource. In the
                                  following resources, SectionName is interpreted as the following:

                                  * Gateway: Listener name. When both Port (experimental) and SectionName
                                  are specified, the name and port of the selected listener must match
                                  both specified values.
                                  * Service: Port name. When both Port (experimental) and SectionName
                                  are specified, the name and port of the selected listener must match
                                  both specified values.

                                  Implementations MAY choose to support attaching Routes to other resources.
                                  If that is the case, they MUST clearly document how SectionName is
                                  interpreted.

                                  When unspecified (empty string), this will reference the entire resource.
                                  For the purpose of status, an attachment is considered successful if at
                                  least one section in the parent resource accepts it. For example, Gateway
                                  listeners can restrict which Routes can attach to them by Route kind,
                                  namespace, or hostname. If 1 of 2 Gateway listeners accept attachment from
                                  the referencing Route, the Route MUST be considered successfully
                                  attached. If no Gateway listeners accept attachment from this Route, the
                                  Route MUST be considered detached from the Gateway.

                                  Support: Core
                                maxLength: 253
                                minLength: 1
                                pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                type: string
                            required:
                            - name
                            type: object
                          maxItems: 32
                          type: array
                        rules:
                          description: |-
                            Rules are a list of TCP matchers and actions.

                            <gateway:experimental:validation:XValidation:message="Rule name must be unique within the route",rule="self.all(l1, !has(l1.name) || self.exists_one(l2, has(l2.name) && l1.name == l2.name))">
                          items:
                            description: TCPRouteRule is the configuration for a given
                              rule.
                            properties:
                              backendRefs:
                                description: |-
                                  BackendRefs defines the backend(s) where matching requests should be
                                  sent. If unspecified or invalid (refers to a non-existent resource or a
                                  Service with no endpoints), the underlying implementation MUST actively
                                  reject connection attempts to this backend. Connection rejections must
                                  respect weight; if an invalid backend is requested to have 80% of
                                  connections, then 80% of connections must be rejected instead.

                                  Support: Core for Kubernetes Service

                                  Support: Extended for Kubernetes ServiceImport

                                  Support: Implementation-specific for any other resource

                                  Support for weight: Extended
                                items:
                                  description: |-
                                    BackendRef defines how a Route should forward a request to a Kubernetes
                                    resource.

                                    Note that when a namespace different than the local namespace is specified, a
                                    ReferenceGrant object is required in the referent namespace to allow that
                                    namespace's owner to accept the reference. See the ReferenceGrant
                                    documentation for details.

                                    <gateway:experimental:description>

                                    When the BackendRef points to a Kubernetes Service, implementations SHOULD
                                    honor the appProtocol field if it is set for the target Service Port.

                                    Implementations supporting appProtocol SHOULD recognize the Kubernetes
                                    Standard Application Protocols defined in KEP-3726.

                                    If a Service appProtocol isn't specified, an implementation MAY infer the
                                    backend protocol through its own means. Implementations MAY infer the
                                    protocol from the Route type referring to the backend Service.

                                    If a Route is not able to send traffic to the backend using the specified
                                    protocol then the backend is considered invalid. Implementations MUST set the
                                    "ResolvedRefs" condition to "False" with the "UnsupportedProtocol" reason.

                                    </gateway:experimental:description>

                                    Note that when the BackendTLSPolicy object is enabled by the implementation,
                                    there are some extra rules about validity to consider here. See the fields
                                    where this struct is used for more information about the exact behavior.
                                  properties:
                                    group:
                                      default: ""
                                      description: |-
                                        Group is the group of the referent. For example, "gateway.networking.k8s.io".
                                        When unspecified or empty string, core API group is inferred.
                                      maxLength: 253
                                      pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                      type: string
                                    kind:
                                      default: Service
                                      description: |-
                                        Kind is the Kubernetes resource kind of the referent. For example
                                        "Service".

                                        Defaults to "Service" when not specified.

                                        ExternalName services can refer to CNAME DNS records that may live
                                        outside of the cluster and as such are difficult to reason about in
                                        terms of conformance. They also may not be safe to forward to (see
                                        CVE-2021-25740 for more information). Implementations SHOULD NOT
                                        support ExternalName Services.

                                        Support: Core (Services with a type other than ExternalName)

                                        Support: Implementation-specific (Services with type ExternalName)
                                      maxLength: 63
                                      minLength: 1
                                      pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                                      type: string
                                    name:
                                      description: Name is the name of the referent.
                                      maxLength: 253
                                      minLength: 1
                                      type: string
                                    namespace:
                                      description: |-
                                        Namespace is the namespace of the backend. When unspecified, the local
                                        namespace is inferred.

                                        Note that when a namespace different than the local namespace is specified,
                                        a ReferenceGrant object is required in the referent namespace to allow that
                                        namespace's owner to accept the reference. See the ReferenceGrant
                                        documentation for details.

                                        Support: Core
                                      maxLength: 63
                                      minLength: 1
                                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                      type: string
                                    port:
                                      description: |-
                                        Port specifies the destination port number to use for this resource.
                                        Port is required when the referent is a Kubernetes Service. In this
                                        case, the port number is the service port number, not the target port.
                                        For other resources, destination port might be derived from the referent
                                        resource or this field.
                                      format: int32
                                      maximum: 65535
                                      minimum: 1
                                      type: integer
                                    weight:
                                      default: 1
                                      description: |-
                                        Weight specifies the proportion of requests forwarded to the referenced
                                        backend. This is computed as weight/(sum of all weights in this
                                        BackendRefs list). For non-zero values, there may be some epsilon from
                                        the exact proportion defined here depending on the precision an
                                        implementation supports. Weight is not a percentage and the sum of
                                        weights does not need to equal 100.

                                        If only one backend is specified and it has a weight greater than 0, 100%
                                        of the traffic is forwarded to that backend. If weight is set to 0, no
                                        traffic should be forwarded for this entry. If unspecified, weight
                                        defaults to 1.

                                        Support for this field varies based on the context where used.
                                      format: int32
                                      maximum: 1000000
                                      minimum: 0
                                      type: integer
                                  required:
                                  - name
                                  type: object
                                  x-kubernetes-validations:
                                  - message: Must have port for Service reference
                                    rule: '(size(self.group) == 0 && self.kind ==
                                      ''Service'') ? has(self.port) : true'
                                maxItems: 16
                                minItems: 1
                                type: array
                              name:
                                description: |-
                                  Name is the name of the route rule. This name MUST be unique within a Route if it is set.

                                  Support: Extended
                                maxLength: 253
                                minLength: 1
                                pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                type: string
                            type: object
                          maxItems: 16
                          minItems: 1
                          type: array
                      required:
                      - rules
                      type: object
                    type: array
                  template:
                    properties:
                      spec:
                        description: Workload specific gateway
                        properties:
                          addresses:
                            description: |-
                              Addresses requested for this Gateway. This is optional and behavior can
                              depend on the implementation. If a value is set in the spec and the
                              requested address is invalid or unavailable, the implementation MUST
                              indicate this in the associated entry in GatewayStatus.Addresses.

                              The Addresses field represents a request for the address(es) on the
                              "outside of the Gateway", that traffic bound for this Gateway will use.
                              This could be the IP address or hostname of an external load balancer or
                              other networking infrastructure, or some other address that traffic will
                              be sent to.

                              If no Addresses are specified, the implementation MAY schedule the
                              Gateway in an implementation-specific manner, assigning an appropriate
                              set of Addresses.

                              The implementation MUST bind all Listeners to every GatewayAddress that
                              it assigns to the Gateway and add a corresponding entry in
                              GatewayStatus.Addresses.

                              Support: Extended

                              <gateway:validateIPAddress>
                            items:
                              description: GatewayAddress describes an address that
                                can be bound to a Gateway.
                              properties:
                                type:
                                  default: IPAddress
                                  description: Type of the address.
                                  maxLength: 253
                                  minLength: 1
                                  pattern: ^Hostname|IPAddress|NamedAddress|[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*\/[A-Za-z0-9\/\-._~%!$&'()*+,;=:]+$
                                  type: string
                                value:
                                  description: |-
                                    Value of the address. The validity of the values will depend
                                    on the type and support by the controller.

                                    Examples: `1.2.3.4`, `128::1`, `my-ip-address`.
                                  maxLength: 253
                                  minLength: 1
                                  type: string
                              required:
                              - value
                              type: object
                              x-kubernetes-validations:
                              - message: Hostname value must only contain valid characters
                                  (matching ^(\*\.)?[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$)
                                rule: 'self.type == ''Hostname'' ? self.value.matches(r"""^(\*\.)?[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$"""):
                                  true'
                            maxItems: 16
                            type: array
                            x-kubernetes-validations:
                            - message: IPAddress values must be unique
                              rule: 'self.all(a1, a1.type == ''IPAddress'' ? self.exists_one(a2,
                                a2.type == a1.type && a2.value == a1.value) : true
                                )'
                            - message: Hostname values must be unique
                              rule: 'self.all(a1, a1.type == ''Hostname'' ? self.exists_one(a2,
                                a2.type == a1.type && a2.value == a1.value) : true
                                )'
                          backendTLS:
                            description: |-
                              BackendTLS configures TLS settings for when this Gateway is connecting to
                              backends with TLS.

                              Support: Core

                              <gateway:experimental>
                            properties:
                              clientCertificateRef:
                                description: |-
                                  ClientCertificateRef is a reference to an object that contains a Client
                                  Certificate and the associated private key.

                                  References to a resource in different namespace are invalid UNLESS there
                                  is a ReferenceGrant in the target namespace that allows the certificate
                                  to be attached. If a ReferenceGrant does not allow this reference, the
                                  "ResolvedRefs" condition MUST be set to False for this listener with the
                                  "RefNotPermitted" reason.

                                  ClientCertificateRef can reference to standard Kubernetes resources, i.e.
                                  Secret, or implementation-specific custom resources.

                                  This setting can be overridden on the service level by use of BackendTLSPolicy.

                                  Support: Core

                                  <gateway:experimental>
                                properties:
                                  group:
                                    default: ""
                                    description: |-
                                      Group is the group of the referent. For example, "gateway.networking.k8s.io".
                                      When unspecified or empty string, core API group is inferred.
                                    maxLength: 253
                                    pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                    type: string
                                  kind:
                                    default: Secret
                                    description: Kind is kind of the referent. For
                                      example "Secret".
                                    maxLength: 63
                                    minLength: 1
                                    pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                                    type: string
                                  name:
                                    description: Name is the name of the referent.
                                    maxLength: 253
                                    minLength: 1
                                    type: string
                                  namespace:
                                    description: |-
                                      Namespace is the namespace of the referenced object. When unspecified, the local
                                      namespace is inferred.

                                      Note that when a namespace different than the local namespace is specified,
                                      a ReferenceGrant object is required in the referent namespace to allow that
                                      namespace's owner to accept the reference. See the ReferenceGrant
                                      documentation for details.

                                      Support: Core
                                    maxLength: 63
                                    minLength: 1
                                    pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                    type: string
                                required:
                                - name
                                type: object
                            type: object
                          gatewayClassName:
                            description: |-
                              GatewayClassName used for this Gateway. This is the name of a
                              GatewayClass resource.
                            maxLength: 253
                            minLength: 1
                            type: string
                          infrastructure:
                            description: |-
                              Infrastructure defines infrastructure level attributes about this Gateway instance.

                              Support: Extended
                            properties:
                              annotations:
                                additionalProperties:
                                  description: |-
                                    AnnotationValue is the value of an annotation in Gateway API. This is used
                                    for validation of maps such as TLS options. This roughly matches Kubernetes
                                    annotation validation, although the length validation in that case is based
                                    on the entire size of the annotations struct.
                                  maxLength: 4096
                                  minLength: 0
                                  type: string
                                description: |-
                                  Annotations that SHOULD be applied to any resources created in response to this Gateway.

                                  For implementations creating other Kubernetes objects, this should be the `metadata.annotations` field on resources.
                                  For other implementations, this refers to any relevant (implementation specific) "annotations" concepts.

                                  An implementation may chose to add additional implementation-specific annotations as they see fit.

                                  Support: Extended
                                maxProperties: 8
                                type: object
                                x-kubernetes-validations:
                                - message: Annotation keys must be in the form of
                                    an optional DNS subdomain prefix followed by a
                                    required name segment of up to 63 characters.
                                  rule: self.all(key, key.matches(r"""^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?([A-Za-z0-9][-A-Za-z0-9_.]{0,61})?[A-Za-z0-9]$"""))
                                - message: If specified, the annotation key's prefix
                                    must be a DNS subdomain not longer than 253 characters
                                    in total.
                                  rule: self.all(key, key.split("/")[0].size() < 253)
                              labels:
                                additionalProperties:
                                  description: |-
                                    LabelValue is the value of a label in the Gateway API. This is used for validation
                                    of maps such as Gateway infrastructure labels. This matches the Kubernetes
                                    label validation rules:
                                    * must be 63 characters or less (can be empty),
                                    * unless empty, must begin and end with an alphanumeric character ([a-z0-9A-Z]),
                                    * could contain dashes (-), underscores (_), dots (.), and alphanumerics between.

                                    Valid values include:

                                    * MyValue
                                    * my.name
                                    * 123-my-value
                                  maxLength: 63
                                  minLength: 0
                                  pattern: ^(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])?$
                                  type: string
                                description: |-
                                  Labels that SHOULD be applied to any resources created in response to this Gateway.

                                  For implementations creating other Kubernetes objects, this should be the `metadata.labels` field on resources.
                                  For other implementations, this refers to any relevant (implementation specific) "labels" concepts.

                                  An implementation may chose to add additional implementation-specific labels as they see fit.

                                  If an implementation maps these labels to Pods, or any other resource that would need to be recreated when labels
                                  change, it SHOULD clearly warn about this behavior in documentation.

                                  Support: Extended
                                maxProperties: 8
                                type: object
                                x-kubernetes-validations:
                                - message: Label keys must be in the form of an optional
                                    DNS subdomain prefix followed by a required name
                                    segment of up to 63 characters.
                                  rule: self.all(key, key.matches(r"""^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?([A-Za-z0-9][-A-Za-z0-9_.]{0,61})?[A-Za-z0-9]$"""))
                                - message: If specified, the label key's prefix must
                                    be a DNS subdomain not longer than 253 characters
                                    in total.
                                  rule: self.all(key, key.split("/")[0].size() < 253)
                              parametersRef:
                                description: |-
                                  ParametersRef is a reference to a resource that contains the configuration
                                  parameters corresponding to the Gateway. This is optional if the
                                  controller does not require any additional configuration.

                                  This follows the same semantics as GatewayClass's `parametersRef`, but on a per-Gateway basis

                                  The Gateway's GatewayClass may provide its own `parametersRef`. When both are specified,
                                  the merging behavior is implementation specific.
                                  It is generally recommended that GatewayClass provides defaults that can be overridden by a Gateway.

                                  Support: Implementation-specific
                                properties:
                                  group:
                                    description: Group is the group of the referent.
                                    maxLength: 253
                                    pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                    type: string
                                  kind:
                                    description: Kind is kind of the referent.
                                    maxLength: 63
                                    minLength: 1
                                    pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                                    type: string
                                  name:
                                    description: Name is the name of the referent.
                                    maxLength: 253
                                    minLength: 1
                                    type: string
                                required:
                                - group
                                - kind
                                - name
                                type: object
                            type: object
                          listeners:
                            description: |-
                              Listeners associated with this Gateway. Listeners define
                              logical endpoints that are bound on this Gateway's addresses.
                              At least one Listener MUST be specified.

                              Each Listener in a set of Listeners (for example, in a single Gateway)
                              MUST be _distinct_, in that a traffic flow MUST be able to be assigned to
                              exactly one listener. (This section uses "set of Listeners" rather than
                              "Listeners in a single Gateway" because implementations MAY merge configuration
                              from multiple Gateways onto a single data plane, and these rules _also_
                              apply in that case).

                              Practically, this means that each listener in a set MUST have a unique
                              combination of Port, Protocol, and, if supported by the protocol, Hostname.

                              Some combinations of port, protocol, and TLS settings are considered
                              Core support and MUST be supported by implementations based on their
                              targeted conformance profile:

                              HTTP Profile

                              1. HTTPRoute, Port: 80, Protocol: HTTP
                              2. HTTPRoute, Port: 443, Protocol: HTTPS, TLS Mode: Terminate, TLS keypair provided

                              TLS Profile

                              1. TLSRoute, Port: 443, Protocol: TLS, TLS Mode: Passthrough

                              "Distinct" Listeners have the following property:

                              The implementation can match inbound requests to a single distinct
                              Listener. When multiple Listeners share values for fields (for
                              example, two Listeners with the same Port value), the implementation
                              can match requests to only one of the Listeners using other
                              Listener fields.

                              For example, the following Listener scenarios are distinct:

                              1. Multiple Listeners with the same Port that all use the "HTTP"
                                 Protocol that all have unique Hostname values.
                              2. Multiple Listeners with the same Port that use either the "HTTPS" or
                                 "TLS" Protocol that all have unique Hostname values.
                              3. A mixture of "TCP" and "UDP" Protocol Listeners, where no Listener
                                 with the same Protocol has the same Port value.

                              Some fields in the Listener struct have possible values that affect
                              whether the Listener is distinct. Hostname is particularly relevant
                              for HTTP or HTTPS protocols.

                              When using the Hostname value to select between same-Port, same-Protocol
                              Listeners, the Hostname value must be different on each Listener for the
                              Listener to be distinct.

                              When the Listeners are distinct based on Hostname, inbound request
                              hostnames MUST match from the most specific to least specific Hostname
                              values to choose the correct Listener and its associated set of Routes.

                              Exact matches must be processed before wildcard matches, and wildcard
                              matches must be processed before fallback (empty Hostname value)
                              matches. For example, `"foo.example.com"` takes precedence over
                              `"*.example.com"`, and `"*.example.com"` takes precedence over `""`.

                              Additionally, if there are multiple wildcard entries, more specific
                              wildcard entries must be processed before less specific wildcard entries.
                              For example, `"*.foo.example.com"` takes precedence over `"*.example.com"`.
                              The precise definition here is that the higher the number of dots in the
                              hostname to the right of the wildcard character, the higher the precedence.

                              The wildcard character will match any number of characters _and dots_ to
                              the left, however, so `"*.example.com"` will match both
                              `"foo.bar.example.com"` _and_ `"bar.example.com"`.

                              If a set of Listeners contains Listeners that are not distinct, then those
                              Listeners are Conflicted, and the implementation MUST set the "Conflicted"
                              condition in the Listener Status to "True".

                              Implementations MAY choose to accept a Gateway with some Conflicted
                              Listeners only if they only accept the partial Listener set that contains
                              no Conflicted Listeners. To put this another way, implementations may
                              accept a partial Listener set only if they throw out *all* the conflicting
                              Listeners. No picking one of the conflicting listeners as the winner.
                              This also means that the Gateway must have at least one non-conflicting
                              Listener in this case, otherwise it violates the requirement that at
                              least one Listener must be present.

                              The implementation MUST set a "ListenersNotValid" condition on the
                              Gateway Status when the Gateway contains Conflicted Listeners whether or
                              not they accept the Gateway. That Condition SHOULD clearly
                              indicate in the Message which Listeners are conflicted, and which are
                              Accepted. Additionally, the Listener status for those listeners SHOULD
                              indicate which Listeners are conflicted and not Accepted.

                              A Gateway's Listeners are considered "compatible" if:

                              1. They are distinct.
                              2. The implementation can serve them in compliance with the Addresses
                                 requirement that all Listeners are available on all assigned
                                 addresses.

                              Compatible combinations in Extended support are expected to vary across
                              implementations. A combination that is compatible for one implementation
                              may not be compatible for another.

                              For example, an implementation that cannot serve both TCP and UDP listeners
                              on the same address, or cannot mix HTTPS and generic TLS listens on the same port
                              would not consider those cases compatible, even though they are distinct.

                              Note that requests SHOULD match at most one Listener. For example, if
                              Listeners are defined for "foo.example.com" and "*.example.com", a
                              request to "foo.example.com" SHOULD only be routed using routes attached
                              to the "foo.example.com" Listener (and not the "*.example.com" Listener).
                              This concept is known as "Listener Isolation". Implementations that do
                              not support Listener Isolation MUST clearly document this.

                              Implementations MAY merge separate Gateways onto a single set of
                              Addresses if all Listeners across all Gateways are compatible.

                              Support: Core
                            items:
                              description: |-
                                Listener embodies the concept of a logical endpoint where a Gateway accepts
                                network connections.
                              properties:
                                allowedRoutes:
                                  default:
                                    namespaces:
                                      from: Same
                                  description: |-
                                    AllowedRoutes defines the types of routes that MAY be attached to a
                                    Listener and the trusted namespaces where those Route resources MAY be
                                    present.

                                    Although a client request may match multiple route rules, only one rule
                                    may ultimately receive the request. Matching precedence MUST be
                                    determined in order of the following criteria:

                                    * The most specific match as defined by the Route type.
                                    * The oldest Route based on creation timestamp. For example, a Route with
                                      a creation timestamp of "2020-09-08 01:02:03" is given precedence over
                                      a Route with a creation timestamp of "2020-09-08 01:02:04".
                                    * If everything else is equivalent, the Route appearing first in
                                      alphabetical order (namespace/name) should be given precedence. For
                                      example, foo/bar is given precedence over foo/baz.

                                    All valid rules within a Route attached to this Listener should be
                                    implemented. Invalid Route rules can be ignored (sometimes that will mean
                                    the full Route). If a Route rule transitions from valid to invalid,
                                    support for that Route rule should be dropped to ensure consistency. For
                                    example, even if a filter specified by a Route rule is invalid, the rest
                                    of the rules within that Route should still be supported.

                                    Support: Core
                                  properties:
                                    kinds:
                                      description: |-
                                        Kinds specifies the groups and kinds of Routes that are allowed to bind
                                        to this Gateway Listener. When unspecified or empty, the kinds of Routes
                                        selected are determined using the Listener protocol.

                                        A RouteGroupKind MUST correspond to kinds of Routes that are compatible
                                        with the application protocol specified in the Listener's Protocol field.
                                        If an implementation does not support or recognize this resource type, it
                                        MUST set the "ResolvedRefs" condition to False for this Listener with the
                                        "InvalidRouteKinds" reason.

                                        Support: Core
                                      items:
                                        description: RouteGroupKind indicates the
                                          group and kind of a Route resource.
                                        properties:
                                          group:
                                            default: gateway.networking.k8s.io
                                            description: Group is the group of the
                                              Route.
                                            maxLength: 253
                                            pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                            type: string
                                          kind:
                                            description: Kind is the kind of the Route.
                                            maxLength: 63
                                            minLength: 1
                                            pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                                            type: string
                                        required:
                                        - kind
                                        type: object
                                      maxItems: 8
                                      type: array
                                    namespaces:
                                      default:
                                        from: Same
                                      description: |-
                                        Namespaces indicates namespaces from which Routes may be attached to this
                                        Listener. This is restricted to the namespace of this Gateway by default.

                                        Support: Core
                                      properties:
                                        from:
                                          default: Same
                                          description: |-
                                            From indicates where Routes will be selected for this Gateway. Possible
                                            values are:

                                            * All: Routes in all namespaces may be used by this Gateway.
                                            * Selector: Routes in namespaces selected by the selector may be used by
                                              this Gateway.
                                            * Same: Only Routes in the same namespace may be used by this Gateway.

                                            Support: Core
                                          enum:
                                          - All
                                          - Selector
                                          - Same
                                          type: string
                                        selector:
                                          description: |-
                                            Selector must be specified when From is set to "Selector". In that case,
                                            only Routes in Namespaces matching this Selector will be selected by this
                                            Gateway. This field is ignored for other values of "From".

                                            Support: Core
                                          properties:
                                            matchExpressions:
                                              description: matchExpressions is a list
                                                of label selector requirements. The
                                                requirements are ANDed.
                                              items:
                                                description: |-
                                                  A label selector requirement is a selector that contains values, a key, and an operator that
                                                  relates the key and values.
                                                properties:
                                                  key:
                                                    description: key is the label
                                                      key that the selector applies
                                                      to.
                                                    type: string
                                                  operator:
                                                    description: |-
                                                      operator represents a key's relationship to a set of values.
                                                      Valid operators are In, NotIn, Exists and DoesNotExist.
                                                    type: string
                                                  values:
                                                    description: |-
                                                      values is an array of string values. If the operator is In or NotIn,
                                                      the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                      the values array must be empty. This array is replaced during a strategic
                                                      merge patch.
                                                    items:
                                                      type: string
                                                    type: array
                                                    x-kubernetes-list-type: atomic
                                                required:
                                                - key
                                                - operator
                                                type: object
                                              type: array
                                              x-kubernetes-list-type: atomic
                                            matchLabels:
                                              additionalProperties:
                                                type: string
                                              description: |-
                                                matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                                map is equivalent to an element of matchExpressions, whose key field is "key", the
                                                operator is "In", and the values array contains only "value". The requirements are ANDed.
                                              type: object
                                          type: object
                                          x-kubernetes-map-type: atomic
                                      type: object
                                  type: object
                                hostname:
                                  description: |-
                                    Hostname specifies the virtual hostname to match for protocol types that
                                    define this concept. When unspecified, all hostnames are matched. This
                                    field is ignored for protocols that don't require hostname based
                                    matching.

                                    Implementations MUST apply Hostname matching appropriately for each of
                                    the following protocols:

                                    * TLS: The Listener Hostname MUST match the SNI.
                                    * HTTP: The Listener Hostname MUST match the Host header of the request.
                                    * HTTPS: The Listener Hostname SHOULD match at both the TLS and HTTP
                                      protocol layers as described above. If an implementation does not
                                      ensure that both the SNI and Host header match the Listener hostname,
                                      it MUST clearly document that.

                                    For HTTPRoute and TLSRoute resources, there is an interaction with the
                                    `spec.hostnames` array. When both listener and route specify hostnames,
                                    there MUST be an intersection between the values for a Route to be
                                    accepted. For more information, refer to the Route specific Hostnames
                                    documentation.

                                    Hostnames that are prefixed with a wildcard label (`*.`) are interpreted
                                    as a suffix match. That means that a match for `*.example.com` would match
                                    both `test.example.com`, and `foo.test.example.com`, but not `example.com`.

                                    Support: Core
                                  maxLength: 253
                                  minLength: 1
                                  pattern: ^(\*\.)?[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                  type: string
                                name:
                                  description: |-
                                    Name is the name of the Listener. This name MUST be unique within a
                                    Gateway.

                                    Support: Core
                                  maxLength: 253
                                  minLength: 1
                                  pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                  type: string
                                port:
                                  description: |-
                                    Port is the network port. Multiple listeners may use the
                                    same port, subject to the Listener compatibility rules.

                                    Support: Core
                                  format: int32
                                  maximum: 65535
                                  minimum: 1
                                  type: integer
                                protocol:
                                  description: |-
                                    Protocol specifies the network protocol this listener expects to receive.

                                    Support: Core
                                  maxLength: 255
                                  minLength: 1
                                  pattern: ^[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?$|[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*\/[A-Za-z0-9]+$
                                  type: string
                                tls:
                                  description: |-
                                    TLS is the TLS configuration for the Listener. This field is required if
                                    the Protocol field is "HTTPS" or "TLS". It is invalid to set this field
                                    if the Protocol field is "HTTP", "TCP", or "UDP".

                                    The association of SNIs to Certificate defined in GatewayTLSConfig is
                                    defined based on the Hostname field for this listener.

                                    The GatewayClass MUST use the longest matching SNI out of all
                                    available certificates for any TLS handshake.

                                    Support: Core
                                  properties:
                                    certificateRefs:
                                      description: |-
                                        CertificateRefs contains a series of references to Kubernetes objects that
                                        contains TLS certificates and private keys. These certificates are used to
                                        establish a TLS handshake for requests that match the hostname of the
                                        associated listener.

                                        A single CertificateRef to a Kubernetes Secret has "Core" support.
                                        Implementations MAY choose to support attaching multiple certificates to
                                        a Listener, but this behavior is implementation-specific.

                                        References to a resource in different namespace are invalid UNLESS there
                                        is a ReferenceGrant in the target namespace that allows the certificate
                                        to be attached. If a ReferenceGrant does not allow this reference, the
                                        "ResolvedRefs" condition MUST be set to False for this listener with the
                                        "RefNotPermitted" reason.

                                        This field is required to have at least one element when the mode is set
                                        to "Terminate" (default) and is optional otherwise.

                                        CertificateRefs can reference to standard Kubernetes resources, i.e.
                                        Secret, or implementation-specific custom resources.

                                        Support: Core - A single reference to a Kubernetes Secret of type kubernetes.io/tls

                                        Support: Implementation-specific (More than one reference or other resource types)
                                      items:
                                        description: |-
                                          SecretObjectReference identifies an API object including its namespace,
                                          defaulting to Secret.

                                          The API object must be valid in the cluster; the Group and Kind must
                                          be registered in the cluster for this reference to be valid.

                                          References to objects with invalid Group and Kind are not valid, and must
                                          be rejected by the implementation, with appropriate Conditions set
                                          on the containing object.
                                        properties:
                                          group:
                                            default: ""
                                            description: |-
                                              Group is the group of the referent. For example, "gateway.networking.k8s.io".
                                              When unspecified or empty string, core API group is inferred.
                                            maxLength: 253
                                            pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                            type: string
                                          kind:
                                            default: Secret
                                            description: Kind is kind of the referent.
                                              For example "Secret".
                                            maxLength: 63
                                            minLength: 1
                                            pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                                            type: string
                                          name:
                                            description: Name is the name of the referent.
                                            maxLength: 253
                                            minLength: 1
                                            type: string
                                          namespace:
                                            description: |-
                                              Namespace is the namespace of the referenced object. When unspecified, the local
                                              namespace is inferred.

                                              Note that when a namespace different than the local namespace is specified,
                                              a ReferenceGrant object is required in the referent namespace to allow that
                                              namespace's owner to accept the reference. See the ReferenceGrant
                                              documentation for details.

                                              Support: Core
                                            maxLength: 63
                                            minLength: 1
                                            pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                            type: string
                                        required:
                                        - name
                                        type: object
                                      maxItems: 64
                                      type: array
                                    frontendValidation:
                                      description: |-
                                        FrontendValidation holds configuration information for validating the frontend (client).
                                        Setting this field will require clients to send a client certificate
                                        required for validation during the TLS handshake. In browsers this may result in a dialog appearing
                                        that requests a user to specify the client certificate.
                                        The maximum depth of a certificate chain accepted in verification is Implementation specific.

                                        Support: Extended

                                        <gateway:experimental>
                                      properties:
                                        caCertificateRefs:
                                          description: |-
                                            CACertificateRefs contains one or more references to
                                            Kubernetes objects that contain TLS certificates of
                                            the Certificate Authorities that can be used
                                            as a trust anchor to validate the certificates presented by the client.

                                            A single CA certificate reference to a Kubernetes ConfigMap
                                            has "Core" support.
                                            Implementations MAY choose to support attaching multiple CA certificates to
                                            a Listener, but this behavior is implementation-specific.

                                            Support: Core - A single reference to a Kubernetes ConfigMap
                                            with the CA certificate in a key named `ca.crt`.

                                            Support: Implementation-specific (More than one reference, or other kinds
                                            of resources).

                                            References to a resource in a different namespace are invalid UNLESS there
                                            is a ReferenceGrant in the target namespace that allows the certificate
                                            to be attached. If a ReferenceGrant does not allow this reference, the
                                            "ResolvedRefs" condition MUST be set to False for this listener with the
                                            "RefNotPermitted" reason.
                                          items:
                                            description: |-
                                              ObjectReference identifies an API object including its namespace.

                                              The API object must be valid in the cluster; the Group and Kind must
                                              be registered in the cluster for this reference to be valid.

                                              References to objects with invalid Group and Kind are not valid, and must
                                              be rejected by the implementation, with appropriate Conditions set
                                              on the containing object.
                                            properties:
                                              group:
                                                description: |-
                                                  Group is the group of the referent. For example, "gateway.networking.k8s.io".
                                                  When unspecified or empty string, core API group is inferred.
                                                maxLength: 253
                                                pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                                type: string
                                              kind:
                                                description: Kind is kind of the referent.
                                                  For example "ConfigMap" or "Service".
                                                maxLength: 63
                                                minLength: 1
                                                pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                                                type: string
                                              name:
                                                description: Name is the name of the
                                                  referent.
                                                maxLength: 253
                                                minLength: 1
                                                type: string
                                              namespace:
                                                description: |-
                                                  Namespace is the namespace of the referenced object. When unspecified, the local
                                                  namespace is inferred.

                                                  Note that when a namespace different than the local namespace is specified,
                                                  a ReferenceGrant object is required in the referent namespace to allow that
                                                  namespace's owner to accept the reference. See the ReferenceGrant
                                                  documentation for details.

                                                  Support: Core
                                                maxLength: 63
                                                minLength: 1
                                                pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                                type: string
                                            required:
                                            - group
                                            - kind
                                            - name
                                            type: object
                                          maxItems: 8
                                          minItems: 1
                                          type: array
                                      type: object
                                    mode:
                                      default: Terminate
                                      description: |-
                                        Mode defines the TLS behavior for the TLS session initiated by the client.
                                        There are two possible modes:

                                        - Terminate: The TLS session between the downstream client and the
                                          Gateway is terminated at the Gateway. This mode requires certificates
                                          to be specified in some way, such as populating the certificateRefs
                                          field.
                                        - Passthrough: The TLS session is NOT terminated by the Gateway. This
                                          implies that the Gateway can't decipher the TLS stream except for
                                          the ClientHello message of the TLS protocol. The certificateRefs field
                                          is ignored in this mode.

                                        Support: Core
                                      enum:
                                      - Terminate
                                      - Passthrough
                                      type: string
                                    options:
                                      additionalProperties:
                                        description: |-
                                          AnnotationValue is the value of an annotation in Gateway API. This is used
                                          for validation of maps such as TLS options. This roughly matches Kubernetes
                                          annotation validation, although the length validation in that case is based
                                          on the entire size of the annotations struct.
                                        maxLength: 4096
                                        minLength: 0
                                        type: string
                                      description: |-
                                        Options are a list of key/value pairs to enable extended TLS
                                        configuration for each implementation. For example, configuring the
                                        minimum TLS version or supported cipher suites.

                                        A set of common keys MAY be defined by the API in the future. To avoid
                                        any ambiguity, implementation-specific definitions MUST use
                                        domain-prefixed names, such as `example.com/my-custom-option`.
                                        Un-prefixed names are reserved for key names defined by Gateway API.

                                        Support: Implementation-specific
                                      maxProperties: 16
                                      type: object
                                  type: object
                                  x-kubernetes-validations:
                                  - message: certificateRefs or options must be specified
                                      when mode is Terminate
                                    rule: 'self.mode == ''Terminate'' ? size(self.certificateRefs)
                                      > 0 || size(self.options) > 0 : true'
                              required:
                              - name
                              - port
                              - protocol
                              type: object
                            maxItems: 64
                            minItems: 1
                            type: array
                            x-kubernetes-list-map-keys:
                            - name
                            x-kubernetes-list-type: map
                            x-kubernetes-validations:
                            - message: tls must not be specified for protocols ['HTTP',
                                'TCP', 'UDP']
                              rule: 'self.all(l, l.protocol in [''HTTP'', ''TCP'',
                                ''UDP''] ? !has(l.tls) : true)'
                            - message: tls mode must be Terminate for protocol HTTPS
                              rule: 'self.all(l, (l.protocol == ''HTTPS'' && has(l.tls))
                                ? (l.tls.mode == '''' || l.tls.mode == ''Terminate'')
                                : true)'
                            - message: hostname must not be specified for protocols
                                ['TCP', 'UDP']
                              rule: 'self.all(l, l.protocol in [''TCP'', ''UDP'']  ?
                                (!has(l.hostname) || l.hostname == '''') : true)'
                            - message: Listener name must be unique within the Gateway
                              rule: self.all(l1, self.exists_one(l2, l1.name == l2.name))
                            - message: Combination of port, protocol and hostname
                                must be unique for each listener
                              rule: 'self.all(l1, self.exists_one(l2, l1.port == l2.port
                                && l1.protocol == l2.protocol && (has(l1.hostname)
                                && has(l2.hostname) ? l1.hostname == l2.hostname :
                                !has(l1.hostname) && !has(l2.hostname))))'
                        required:
                        - gatewayClassName
                        - listeners
                        type: object
                    type: object
                required:
                - template
                type: object
              placements:
                description: |-
                  Defines where instances should be deployed, and at what scope a deployment
                  will live in, such as in a city, or region.
                items:
                  properties:
                    cityCodes:
                      description: A list of city codes that define where the instances
                        should be deployed.
                      items:
                        type: string
                      type: array
                    name:
                      description: The name of the placement
                      type: string
                    scaleSettings:
                      description: Scale settings such as minimum and maximum replica
                        counts.
                      properties:
                        maxReplicas:
                          description: The maximum number of replicas.
                          format: int32
                          type: integer
                        metrics:
                          description: A list of metrics that determine scaling behavior,
                            such as external metrics.
                          items:
                            properties:
                              resource:
                                description: Resource metrics known to Datum.
                                properties:
                                  name:
                                    description: The name of the resource in question.
                                    type: string
                                  target:
                                    description: The target value for the given metric
                                    properties:
                                      averageUtilization:
                                        description: |-
                                          The target value of the average of the
                                          resource metric across all relevant instances, represented as a percentage of
                                          the requested value of the resource for the instances.
                                        format: int32
                                        type: integer
                                      averageValue:
                                        anyOf:
                                        - type: integer
                                        - type: string
                                        description: |-
                                          The target value of the average of the metric across all relevant instances
                                          (as a quantity)
                                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                        x-kubernetes-int-or-string: true
                                      value:
                                        anyOf:
                                        - type: integer
                                        - type: string
                                        description: The target value of the metric
                                          (as a quantity).
                                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                        x-kubernetes-int-or-string: true
                                    type: object
                                required:
                                - name
                                - target
                                type: object
                            type: object
                          type: array
                        minReplicas:
                          description: The minimum number of replicas.
                          format: int32
                          type: integer
                      required:
                      - minReplicas
                      type: object
                  required:
                  - cityCodes
                  - name
                  - scaleSettings
                  type: object
                minItems: 1
                type: array
              template:
                description: Defines settings for each instance.
                properties:
                  metadata:
                    description: Metadata of the instances created from this template
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        type: object
                      finalizers:
                        items:
                          type: string
                        type: array
                      labels:
                        additionalProperties:
                          type: string
                        type: object
                      name:
                        type: string
                      namespace:
                        type: string
                    type: object
                  spec:
                    description: Describes the desired configuration of an instance
                    properties:
                      networkInterfaces:
                        description: Network interface configuration.
                        items:
                          properties:
                            network:
                              description: The network to attach the network interface
                                to.
                              properties:
                                name:
                                  description: The network name
                                  type: string
                                namespace:
                                  description: |-
                                    The network namespace.

                                    Defaults to the namespace for the type the reference is embedded in.
                                  type: string
                              required:
                              - name
                              type: object
                            networkPolicy:
                              description: |-
                                Interface specific network policy.

                                If provided, this will result in a platform managed network policy being
                                created that targets the specfiic instance interface. This network policy
                                will be of the lowest priority, and can effectively be prohibited from
                                influencing network connectivity.
                              properties:
                                ingress:
                                  items:
                                    description: See k8s network policy types for
                                      inspiration here
                                    properties:
                                      from:
                                        description: |-
                                          from is a list of sources which should be able to access the instances selected for this rule.
                                          Items in this list are combined using a logical OR operation. If this field is
                                          empty or missing, this rule matches all sources (traffic not restricted by
                                          source). If this field is present and contains at least one item, this rule
                                          allows traffic only if the traffic matches at least one item in the from list.
                                        items:
                                          description: |-
                                            NetworkPolicyPeer describes a peer to allow traffic to/from. Only certain combinations of
                                            fields are allowed
                                          properties:
                                            ipBlock:
                                              description: |-
                                                ipBlock defines policy on a particular IPBlock. If this field is set then
                                                neither of the other fields can be.
                                              properties:
                                                cidr:
                                                  description: |-
                                                    cidr is a string representing the IPBlock
                                                    Valid examples are "192.168.1.0/24" or "2001:db8::/64"
                                                  type: string
                                                except:
                                                  description: |-
                                                    except is a slice of CIDRs that should not be included within an IPBlock
                                                    Valid examples are "192.168.1.0/24" or "2001:db8::/64"
                                                    Except values will be rejected if they are outside the cidr range
                                                  items:
                                                    type: string
                                                  type: array
                                                  x-kubernetes-list-type: atomic
                                              required:
                                              - cidr
                                              type: object
                                          type: object
                                        type: array
                                        x-kubernetes-list-type: atomic
                                      ports:
                                        description: |-
                                          ports is a list of ports which should be made accessible on the instances selected for
                                          this rule. Each item in this list is combined using a logical OR. If this field is
                                          empty or missing, this rule matches all ports (traffic not restricted by port).
                                          If this field is present and contains at least one item, then this rule allows
                                          traffic only if the traffic matches at least one port in the list.
                                        items:
                                          description: NetworkPolicyPort describes
                                            a port to allow traffic on
                                          properties:
                                            endPort:
                                              description: |-
                                                endPort indicates that the range of ports from port to endPort if set, inclusive,
                                                should be allowed by the policy. This field cannot be defined if the port field
                                                is not defined or if the port field is defined as a named (string) port.
                                                The endPort must be equal or greater than port.
                                              format: int32
                                              type: integer
                                            port:
                                              anyOf:
                                              - type: integer
                                              - type: string
                                              description: |-
                                                port represents the port on the given protocol. This can either be a numerical or named
                                                port on an instance. If this field is not provided, this matches all port names and
                                                numbers.
                                                If present, only traffic on the specified protocol AND port will be matched.
                                              x-kubernetes-int-or-string: true
                                            protocol:
                                              description: |-
                                                protocol represents the protocol (TCP, UDP, or SCTP) which traffic must match.
                                                If not specified, this field defaults to TCP.
                                              type: string
                                          type: object
                                        type: array
                                        x-kubernetes-list-type: atomic
                                    type: object
                                  type: array
                              type: object
                          required:
                          - network
                          type: object
                        minItems: 1
                        type: array
                      runtime:
                        description: The runtime type of the instance, such as a container
                          sandbox or a VM.
                        properties:
                          resources:
                            description: |-
                              Resources each instance must be allocated.

                              A sandbox runtime's containers may specify resource requests and
                              limits. When limits are defined on all containers, they MUST consume
                              the entire amount of resources defined here. Some resources, such
                              as a GPU, MUST have at least one container request them so that the
                              device can be presented appropriately.

                              A virtual machine runtime will be provided all requested resources.
                            properties:
                              instanceType:
                                description: |-
                                  Full or partial URL of the instance type resource to use for this instance.

                                  For example: `datumcloud/d1-standard-2`

                                  May be combined with `resources` to allow for custom instance types for
                                  instance families that support customization. Instance types which support
                                  customization will appear in the form `<project>/<instanceFamily>-custom`.
                                type: string
                              requests:
                                additionalProperties:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                                description: Describes adjustments to the resources
                                  defined by the instance type.
                                type: object
                            required:
                            - instanceType
                            type: object
                          sandbox:
                            description: A sandbox is a managed isolated environment
                              capable of running containers.
                            properties:
                              containers:
                                description: A list of containers to run within the
                                  sandbox.
                                items:
                                  properties:
                                    env:
                                      description: |-
                                        List of environment variables to set in the container.

                                        so replicate the structure here too.
                                      items:
                                        description: EnvVar represents an environment
                                          variable present in a Container.
                                        properties:
                                          name:
                                            description: Name of the environment variable.
                                              Must be a C_IDENTIFIER.
                                            type: string
                                          value:
                                            description: |-
                                              Variable references $(VAR_NAME) are expanded
                                              using the previously defined environment variables in the container and
                                              any service environment variables. If a variable cannot be resolved,
                                              the reference in the input string will be unchanged. Double $$ are reduced
                                              to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.
                                              "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)".
                                              Escaped references will never be expanded, regardless of whether the variable
                                              exists or not.
                                              Defaults to "".
                                            type: string
                                          valueFrom:
                                            description: Source for the environment
                                              variable's value. Cannot be used if
                                              value is not empty.
                                            properties:
                                              configMapKeyRef:
                                                description: Selects a key of a ConfigMap.
                                                properties:
                                                  key:
                                                    description: The key to select.
                                                    type: string
                                                  name:
                                                    default: ""
                                                    description: |-
                                                      Name of the referent.
                                                      This field is effectively required, but due to backwards compatibility is
                                                      allowed to be empty. Instances of this type with an empty value here are
                                                      almost certainly wrong.
                                                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                    type: string
                                                  optional:
                                                    description: Specify whether the
                                                      ConfigMap or its key must be
                                                      defined
                                                    type: boolean
                                                required:
                                                - key
                                                type: object
                                                x-kubernetes-map-type: atomic
                                              fieldRef:
                                                description: |-
                                                  Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`,
                                                  spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.
                                                properties:
                                                  apiVersion:
                                                    description: Version of the schema
                                                      the FieldPath is written in
                                                      terms of, defaults to "v1".
                                                    type: string
                                                  fieldPath:
                                                    description: Path of the field
                                                      to select in the specified API
                                                      version.
                                                    type: string
                                                required:
                                                - fieldPath
                                                type: object
                                                x-kubernetes-map-type: atomic
                                              resourceFieldRef:
                                                description: |-
                                                  Selects a resource of the container: only resources limits and requests
                                                  (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.
                                                properties:
                                                  containerName:
                                                    description: 'Container name:
                                                      required for volumes, optional
                                                      for env vars'
                                                    type: string
                                                  divisor:
                                                    anyOf:
                                                    - type: integer
                                                    - type: string
                                                    description: Specifies the output
                                                      format of the exposed resources,
                                                      defaults to "1"
                                                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                    x-kubernetes-int-or-string: true
                                                  resource:
                                                    description: 'Required: resource
                                                      to select'
                                                    type: string
                                                required:
                                                - resource
                                                type: object
                                                x-kubernetes-map-type: atomic
                                              secretKeyRef:
                                                description: Selects a key of a secret
                                                  in the pod's namespace
                                                properties:
                                                  key:
                                                    description: The key of the secret
                                                      to select from.  Must be a valid
                                                      secret key.
                                                    type: string
                                                  name:
                                                    default: ""
                                                    description: |-
                                                      Name of the referent.
                                                      This field is effectively required, but due to backwards compatibility is
                                                      allowed to be empty. Instances of this type with an empty value here are
                                                      almost certainly wrong.
                                                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                    type: string
                                                  optional:
                                                    description: Specify whether the
                                                      Secret or its key must be defined
                                                    type: boolean
                                                required:
                                                - key
                                                type: object
                                                x-kubernetes-map-type: atomic
                                            type: object
                                        required:
                                        - name
                                        type: object
                                      type: array
                                      x-kubernetes-list-map-keys:
                                      - name
                                      x-kubernetes-list-type: map
                                    image:
                                      description: The fully qualified container image
                                        name.
                                      type: string
                                    name:
                                      description: The name of the container.
                                      type: string
                                    ports:
                                      description: A list of named ports for the container.
                                      items:
                                        properties:
                                          name:
                                            description: The name of the port that
                                              can be referenced by other platform
                                              features.
                                            type: string
                                          port:
                                            description: The port number, which can
                                              be a value between 1 and 65535.
                                            format: int32
                                            maximum: 65535
                                            minimum: 1
                                            type: integer
                                          protocol:
                                            description: |-
                                              protocol represents the protocol (TCP, UDP, or SCTP) which traffic must match.
                                              If not specified, this field defaults to TCP.
                                            type: string
                                        required:
                                        - name
                                        - port
                                        type: object
                                      type: array
                                      x-kubernetes-list-map-keys:
                                      - name
                                      x-kubernetes-list-type: map
                                    resources:
                                      description: The resource requirements for the
                                        container, such as CPU, memory, and GPUs.
                                      properties:
                                        limits:
                                          additionalProperties:
                                            anyOf:
                                            - type: integer
                                            - type: string
                                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                            x-kubernetes-int-or-string: true
                                          description: Limits describes the maximum
                                            amount of compute resources allowed.
                                          type: object
                                        requests:
                                          additionalProperties:
                                            anyOf:
                                            - type: integer
                                            - type: string
                                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                            x-kubernetes-int-or-string: true
                                          description: Requests describes the minimum
                                            amount of compute resources required.
                                          type: object
                                      type: object
                                    volumeAttachments:
                                      description: A list of volumes to attach to
                                        the container.
                                      items:
                                        properties:
                                          mountPath:
                                            description: |-
                                              The path to mount the volume inside the guest OS.

                                              The referenced volume must be populated with a filesystem to use this
                                              feature.

                                              For VM based instances, this functionality requires certain capabilities
                                              to be annotated on the boot image, such as cloud-init.
                                            type: string
                                          name:
                                            description: The name of the volume to
                                              attach as defined in InstanceSpec.Volumes.
                                            type: string
                                        required:
                                        - name
                                        type: object
                                      type: array
                                  required:
                                  - image
                                  - name
                                  type: object
                                minItems: 1
                                type: array
                                x-kubernetes-list-map-keys:
                                - name
                                x-kubernetes-list-type: map
                              imagePullSecrets:
                                description: |-
                                  An optional list of secrets in the same namespace to use for pulling images
                                  used by the instance.
                                items:
                                  description: |-
                                    References a secret in the same namespace as the entity defining the
                                    reference.
                                  properties:
                                    name:
                                      description: The name of the secret
                                      type: string
                                  required:
                                  - name
                                  type: object
                                type: array
                            required:
                            - containers
                            type: object
                          virtualMachine:
                            description: A virtual machine is a classical VM environment,
                              booting a full OS provided by the user via an image.
                            properties:
                              ports:
                                description: A list of named ports for the virtual
                                  machine.
                                items:
                                  properties:
                                    name:
                                      description: The name of the port that can be
                                        referenced by other platform features.
                                      type: string
                                    port:
                                      description: The port number, which can be a
                                        value between 1 and 65535.
                                      format: int32
                                      maximum: 65535
                                      minimum: 1
                                      type: integer
                                    protocol:
                                      description: |-
                                        protocol represents the protocol (TCP, UDP, or SCTP) which traffic must match.
                                        If not specified, this field defaults to TCP.
                                      type: string
                                  required:
                                  - name
                                  - port
                                  type: object
                                type: array
                                x-kubernetes-list-map-keys:
                                - name
                                x-kubernetes-list-type: map
                              volumeAttachments:
                                description: A list of volumes to attach to the VM.
                                items:
                                  properties:
                                    mountPath:
                                      description: |-
                                        The path to mount the volume inside the guest OS.

                                        The referenced volume must be populated with a filesystem to use this
                                        feature.

                                        For VM based instances, this functionality requires certain capabilities
                                        to be annotated on the boot image, such as cloud-init.
                                      type: string
                                    name:
                                      description: The name of the volume to attach
                                        as defined in InstanceSpec.Volumes.
                                      type: string
                                  required:
                                  - name
                                  type: object
                                minItems: 1
                                type: array
                            required:
                            - volumeAttachments
                            type: object
                        required:
                        - resources
                        type: object
                      volumes:
                        items:
                          properties:
                            configMap:
                              description: A configMap that should populate this volume
                              properties:
                                defaultMode:
                                  description: |-
                                    defaultMode is optional: mode bits used to set permissions on created files by default.
                                    Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
                                    YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
                                    Defaults to 0644.
                                    Directories within the path are not affected by this setting.
                                    This might be in conflict with other options that affect the file
                                    mode, like fsGroup, and the result can be other mode bits set.
                                  format: int32
                                  type: integer
                                items:
                                  description: |-
                                    items if unspecified, each key-value pair in the Data field of the referenced
                                    ConfigMap will be projected into the volume as a file whose name is the
                                    key and content is the value. If specified, the listed keys will be
                                    projected into the specified paths, and unlisted keys will not be
                                    present. If a key is specified which is not present in the ConfigMap,
                                    the volume setup will error unless it is marked optional. Paths must be
                                    relative and may not contain the '..' path or start with '..'.
                                  items:
                                    description: Maps a string key to a path within
                                      a volume.
                                    properties:
                                      key:
                                        description: key is the key to project.
                                        type: string
                                      mode:
                                        description: |-
                                          mode is Optional: mode bits used to set permissions on this file.
                                          Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
                                          YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
                                          If not specified, the volume defaultMode will be used.
                                          This might be in conflict with other options that affect the file
                                          mode, like fsGroup, and the result can be other mode bits set.
                                        format: int32
                                        type: integer
                                      path:
                                        description: |-
                                          path is the relative path of the file to map the key to.
                                          May not be an absolute path.
                                          May not contain the path element '..'.
                                          May not start with the string '..'.
                                        type: string
                                    required:
                                    - key
                                    - path
                                    type: object
                                  type: array
                                  x-kubernetes-list-type: atomic
                                name:
                                  default: ""
                                  description: |-
                                    Name of the referent.
                                    This field is effectively required, but due to backwards compatibility is
                                    allowed to be empty. Instances of this type with an empty value here are
                                    almost certainly wrong.
                                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  type: string
                                optional:
                                  description: optional specify whether the ConfigMap
                                    or its keys must be defined
                                  type: boolean
                              type: object
                              x-kubernetes-map-type: atomic
                            disk:
                              description: A persistent disk backed volume.
                              properties:
                                deviceName:
                                  description: |-
                                    Specifies a unique device name that is reflected into the
                                    `/dev/disk/by-id/datumcloud-*` tree of a Linux operating system
                                    running within the instance. This name can be used to reference
                                    the device for mounting, resizing, and so on, from within the
                                    instance.

                                    If not specified, the server chooses a default device name to
                                    apply to this disk, in the form persistent-disk-x, where x is a
                                    number assigned by Datum Cloud.
                                  type: string
                                template:
                                  description: Settings to create a new disk for an
                                    attached disk
                                  properties:
                                    metadata:
                                      description: Metadata of the disks created from
                                        this template
                                      properties:
                                        annotations:
                                          additionalProperties:
                                            type: string
                                          type: object
                                        finalizers:
                                          items:
                                            type: string
                                          type: array
                                        labels:
                                          additionalProperties:
                                            type: string
                                          type: object
                                        name:
                                          type: string
                                        namespace:
                                          type: string
                                      type: object
                                    spec:
                                      description: Describes the desired configuration
                                        of a disk
                                      properties:
                                        populator:
                                          description: Populator to use while initializing
                                            the disk.
                                          properties:
                                            filesystem:
                                              description: Populate the disk with
                                                a filesystem
                                              properties:
                                                type:
                                                  description: The type of filesystem
                                                    to populate the disk with.
                                                  enum:
                                                  - ext4
                                                  type: string
                                              required:
                                              - type
                                              type: object
                                            image:
                                              description: Populate the disk from
                                                an image
                                              properties:
                                                name:
                                                  description: "The name of the image
                                                    to populate the disk with.\n\n\tin
                                                    `populator.image.imageRef.name`
                                                    though."
                                                  type: string
                                              required:
                                              - name
                                              type: object
                                          type: object
                                        resources:
                                          description: The resource requirements for
                                            the disk.
                                          properties:
                                            requests:
                                              additionalProperties:
                                                anyOf:
                                                - type: integer
                                                - type: string
                                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                x-kubernetes-int-or-string: true
                                              description: Requests describes the
                                                minimum amount of storage resources
                                                required.
                                              type: object
                                          type: object
                                        type:
                                          default: pd-standard
                                          description: The type the disk, such as
                                            `pd-standard`.
                                          type: string
                                      type: object
                                  required:
                                  - spec
                                  type: object
                              required:
                              - template
                              type: object
                            name:
                              description: |-
                                Name is used to reference the volume in `volumeAttachments` for
                                containers and VMs, and will be used to derive the platform resource
                                name when required by prefixing this name with the instance name upon
                                creation.
                              type: string
                            secret:
                              description: A secret that should populate this volume
                              properties:
                                defaultMode:
                                  description: |-
                                    defaultMode is Optional: mode bits used to set permissions on created files by default.
                                    Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
                                    YAML accepts both octal and decimal values, JSON requires decimal values
                                    for mode bits. Defaults to 0644.
                                    Directories within the path are not affected by this setting.
                                    This might be in conflict with other options that affect the file
                                    mode, like fsGroup, and the result can be other mode bits set.
                                  format: int32
                                  type: integer
                                items:
                                  description: |-
                                    items If unspecified, each key-value pair in the Data field of the referenced
                                    Secret will be projected into the volume as a file whose name is the
                                    key and content is the value. If specified, the listed keys will be
                                    projected into the specified paths, and unlisted keys will not be
                                    present. If a key is specified which is not present in the Secret,
                                    the volume setup will error unless it is marked optional. Paths must be
                                    relative and may not contain the '..' path or start with '..'.
                                  items:
                                    description: Maps a string key to a path within
                                      a volume.
                                    properties:
                                      key:
                                        description: key is the key to project.
                                        type: string
                                      mode:
                                        description: |-
                                          mode is Optional: mode bits used to set permissions on this file.
                                          Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
                                          YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
                                          If not specified, the volume defaultMode will be used.
                                          This might be in conflict with other options that affect the file
                                          mode, like fsGroup, and the result can be other mode bits set.
                                        format: int32
                                        type: integer
                                      path:
                                        description: |-
                                          path is the relative path of the file to map the key to.
                                          May not be an absolute path.
                                          May not contain the path element '..'.
                                          May not start with the string '..'.
                                        type: string
                                    required:
                                    - key
                                    - path
                                    type: object
                                  type: array
                                  x-kubernetes-list-type: atomic
                                optional:
                                  description: optional field specify whether the
                                    Secret or its keys must be defined
                                  type: boolean
                                secretName:
                                  description: |-
                                    secretName is the name of the secret in the pod's namespace to use.
                                    More info: https://kubernetes.io/docs/concepts/storage/volumes#secret
                                  type: string
                              type: object
                          required:
                          - name
                          type: object
                        type: array
                        x-kubernetes-list-map-keys:
                        - name
                        x-kubernetes-list-type: map
                    required:
                    - networkInterfaces
                    - runtime
                    type: object
                required:
                - spec
                type: object
            required:
            - placements
            - template
            type: object
          status:
            description: WorkloadStatus defines the observed state of Workload
            properties:
              conditions:
                description: |-
                  Represents the observations of a workload's current state.
                  Known condition types are: "Available", "Progressing"
                items:
                  description: Condition contains details for one aspect of the current
                    state of this API Resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              currentReplicas:
                description: |-
                  The number of instances created by a placement and have the latest
                  workload generation settings applied.
                format: int32
                type: integer
              desiredReplicas:
                description: The desired number of instances to be managed by a placement.
                format: int32
                type: integer
              gateway:
                description: The status of the workload gateway if configured.
                properties:
                  addresses:
                    description: |-
                      Addresses lists the network addresses that have been bound to the
                      Gateway.

                      This list may differ from the addresses provided in the spec under some
                      conditions:

                        * no addresses are specified, all addresses are dynamically assigned
                        * a combination of specified and dynamic addresses are assigned
                        * a specified address was unusable (e.g. already in use)

                      <gateway:validateIPAddress>
                    items:
                      description: GatewayStatusAddress describes a network address
                        that is bound to a Gateway.
                      properties:
                        type:
                          default: IPAddress
                          description: Type of the address.
                          maxLength: 253
                          minLength: 1
                          pattern: ^Hostname|IPAddress|NamedAddress|[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*\/[A-Za-z0-9\/\-._~%!$&'()*+,;=:]+$
                          type: string
                        value:
                          description: |-
                            Value of the address. The validity of the values will depend
                            on the type and support by the controller.

                            Examples: `1.2.3.4`, `128::1`, `my-ip-address`.
                          maxLength: 253
                          minLength: 1
                          type: string
                      required:
                      - value
                      type: object
                      x-kubernetes-validations:
                      - message: Hostname value must only contain valid characters
                          (matching ^(\*\.)?[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$)
                        rule: 'self.type == ''Hostname'' ? self.value.matches(r"""^(\*\.)?[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$"""):
                          true'
                    maxItems: 16
                    type: array
                  conditions:
                    default:
                    - lastTransitionTime: "1970-01-01T00:00:00Z"
                      message: Waiting for controller
                      reason: Pending
                      status: Unknown
                      type: Accepted
                    - lastTransitionTime: "1970-01-01T00:00:00Z"
                      message: Waiting for controller
                      reason: Pending
                      status: Unknown
                      type: Programmed
                    description: |-
                      Conditions describe the current conditions of the Gateway.

                      Implementations should prefer to express Gateway conditions
                      using the `GatewayConditionType` and `GatewayConditionReason`
                      constants so that operators and tools can converge on a common
                      vocabulary to describe Gateway state.

                      Known condition types are:

                      * "Accepted"
                      * "Programmed"
                      * "Ready"
                    items:
                      description: Condition contains details for one aspect of the
                        current state of this API Resource.
                      properties:
                        lastTransitionTime:
                          description: |-
                            lastTransitionTime is the last time the condition transitioned from one status to another.
                            This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                          format: date-time
                          type: string
                        message:
                          description: |-
                            message is a human readable message indicating details about the transition.
                            This may be an empty string.
                          maxLength: 32768
                          type: string
                        observedGeneration:
                          description: |-
                            observedGeneration represents the .metadata.generation that the condition was set based upon.
                            For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                            with respect to the current state of the instance.
                          format: int64
                          minimum: 0
                          type: integer
                        reason:
                          description: |-
                            reason contains a programmatic identifier indicating the reason for the condition's last transition.
                            Producers of specific condition types may define expected values and meanings for this field,
                            and whether the values are considered a guaranteed API.
                            The value should be a CamelCase string.
                            This field may not be empty.
                          maxLength: 1024
                          minLength: 1
                          pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                          type: string
                        status:
                          description: status of the condition, one of True, False,
                            Unknown.
                          enum:
                          - "True"
                          - "False"
                          - Unknown
                          type: string
                        type:
                          description: type of condition in CamelCase or in foo.example.com/CamelCase.
                          maxLength: 316
                          pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                          type: string
                      required:
                      - lastTransitionTime
                      - message
                      - reason
                      - status
                      - type
                      type: object
                    maxItems: 8
                    type: array
                    x-kubernetes-list-map-keys:
                    - type
                    x-kubernetes-list-type: map
                  listeners:
                    description: Listeners provide status for each unique listener
                      port defined in the Spec.
                    items:
                      description: ListenerStatus is the status associated with a
                        Listener.
                      properties:
                        attachedRoutes:
                          description: |-
                            AttachedRoutes represents the total number of Routes that have been
                            successfully attached to this Listener.

                            Successful attachment of a Route to a Listener is based solely on the
                            combination of the AllowedRoutes field on the corresponding Listener
                            and the Route's ParentRefs field. A Route is successfully attached to
                            a Listener when it is selected by the Listener's AllowedRoutes field
                            AND the Route has a valid ParentRef selecting the whole Gateway
                            resource or a specific Listener as a parent resource (more detail on
                            attachment semantics can be found in the documentation on the various
                            Route kinds ParentRefs fields). Listener or Route status does not impact
                            successful attachment, i.e. the AttachedRoutes field count MUST be set
                            for Listeners with condition Accepted: false and MUST count successfully
                            attached Routes that may themselves have Accepted: false conditions.

                            Uses for this field include troubleshooting Route attachment and
                            measuring blast radius/impact of changes to a Listener.
                          format: int32
                          type: integer
                        conditions:
                          description: Conditions describe the current condition of
                            this listener.
                          items:
                            description: Condition contains details for one aspect
                              of the current state of this API Resource.
                            properties:
                              lastTransitionTime:
                                description: |-
                                  lastTransitionTime is the last time the condition transitioned from one status to another.
                                  This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                                format: date-time
                                type: string
                              message:
                                description: |-
                                  message is a human readable message indicating details about the transition.
                                  This may be an empty string.
                                maxLength: 32768
                                type: string
                              observedGeneration:
                                description: |-
                                  observedGeneration represents the .metadata.generation that the condition was set based upon.
                                  For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                                  with respect to the current state of the instance.
                                format: int64
                                minimum: 0
                                type: integer
                              reason:
                                description: |-
                                  reason contains a programmatic identifier indicating the reason for the condition's last transition.
                                  Producers of specific condition types may define expected values and meanings for this field,
                                  and whether the values are considered a guaranteed API.
                                  The value should be a CamelCase string.
                                  This field may not be empty.
                                maxLength: 1024
                                minLength: 1
                                pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                                type: string
                              status:
                                description: status of the condition, one of True,
                                  False, Unknown.
                                enum:
                                - "True"
                                - "False"
                                - Unknown
                                type: string
                              type:
                                description: type of condition in CamelCase or in
                                  foo.example.com/CamelCase.
                                maxLength: 316
                                pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                                type: string
                            required:
                            - lastTransitionTime
                            - message
                            - reason
                            - status
                            - type
                            type: object
                          maxItems: 8
                          type: array
                          x-kubernetes-list-map-keys:
                          - type
                          x-kubernetes-list-type: map
                        name:
                          description: Name is the name of the Listener that this
                            status corresponds to.
                          maxLength: 253
                          minLength: 1
                          pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                          type: string
                        supportedKinds:
                          description: |-
                            SupportedKinds is the list indicating the Kinds supported by this
                            listener. This MUST represent the kinds an implementation supports for
                            that Listener configuration.

                            If kinds are specified in Spec that are not supported, they MUST NOT
                            appear in this list and an implementation MUST set the "ResolvedRefs"
                            condition to "False" with the "InvalidRouteKinds" reason. If both valid
                            and invalid Route kinds are specified, the implementation MUST
                            reference the valid Route kinds that have been specified.
                          items:
                            description: RouteGroupKind indicates the group and kind
                              of a Route resource.
                            properties:
                              group:
                                default: gateway.networking.k8s.io
                                description: Group is the group of the Route.
                                maxLength: 253
                                pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                type: string
                              kind:
                                description: Kind is the kind of the Route.
                                maxLength: 63
                                minLength: 1
                                pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                                type: string
                            required:
                            - kind
                            type: object
                          maxItems: 8
                          type: array
                      required:
                      - attachedRoutes
                      - conditions
                      - name
                      - supportedKinds
                      type: object
                    maxItems: 64
                    type: array
                    x-kubernetes-list-map-keys:
                    - name
                    x-kubernetes-list-type: map
                type: object
              placements:
                description: The current status of placemetns in a workload.
                items:
                  properties:
                    conditions:
                      description: |-
                        Represents the observations of a placement's current state.
                        Known condition types are: "Available", "Progressing"
                      items:
                        description: Condition contains details for one aspect of
                          the current state of this API Resource.
                        properties:
                          lastTransitionTime:
                            description: |-
                              lastTransitionTime is the last time the condition transitioned from one status to another.
                              This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                            format: date-time
                            type: string
                          message:
                            description: |-
                              message is a human readable message indicating details about the transition.
                              This may be an empty string.
                            maxLength: 32768
                            type: string
                          observedGeneration:
                            description: |-
                              observedGeneration represents the .metadata.generation that the condition was set based upon.
                              For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                              with respect to the current state of the instance.
                            format: int64
                            minimum: 0
                            type: integer
                          reason:
                            description: |-
                              reason contains a programmatic identifier indicating the reason for the condition's last transition.
                              Producers of specific condition types may define expected values and meanings for this field,
                              and whether the values are considered a guaranteed API.
                              The value should be a CamelCase string.
                              This field may not be empty.
                            maxLength: 1024
                            minLength: 1
                            pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                            type: string
                          status:
                            description: status of the condition, one of True, False,
                              Unknown.
                            enum:
                            - "True"
                            - "False"
                            - Unknown
                            type: string
                          type:
                            description: type of condition in CamelCase or in foo.example.com/CamelCase.
                            maxLength: 316
                            pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                            type: string
                        required:
                        - lastTransitionTime
                        - message
                        - reason
                        - status
                        - type
                        type: object
                      type: array
                    currentReplicas:
                      description: |-
                        The number of instances created by a placement and have the latest
                        workload generation settings applied.
                      format: int32
                      type: integer
                    desiredReplicas:
                      description: The desired number of instances to be managed by
                        a placement.
                      format: int32
                      type: integer
                    name:
                      description: The name of the placement
                      type: string
                    replicas:
                      description: The number of instances created by a placement
                      format: int32
                      type: integer
                  required:
                  - currentReplicas
                  - desiredReplicas
                  - name
                  - replicas
                  type: object
                type: array
              replicas:
                description: The number of instances created by a placement
                format: int32
                type: integer
            required:
            - currentReplicas
            - desiredReplicas
            - replicas
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
