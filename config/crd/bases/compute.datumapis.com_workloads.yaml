---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.4
  name: workloads.compute.datumapis.com
spec:
  group: compute.datumapis.com
  names:
    kind: Workload
    listKind: WorkloadList
    plural: workloads
    singular: workload
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    - jsonPath: .status.conditions[?(@.type=="Available")].status
      name: Available
      type: string
    - jsonPath: .status.conditions[?(@.type=="Available")].reason
      name: Reason
      type: string
    - jsonPath: .status.deployments
      name: Deployments
      type: string
    - jsonPath: .status.replicas
      name: Replicas
      type: string
    - jsonPath: .status.readyReplicas
      name: Ready
      type: string
    - jsonPath: .status.desiredReplicas
      name: Desired
      type: string
    - jsonPath: .status.currentReplicas
      name: Up-to-date
      type: string
    name: v1alpha
    schema:
      openAPIV3Schema:
        description: Workload is the Schema for the workloads API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: WorkloadSpec defines the desired state of Workload
            properties:
              placements:
                description: |-
                  Defines where instances should be deployed, and at what scope a deployment
                  will live in, such as in a city, or region.
                items:
                  properties:
                    cityCodes:
                      description: A list of city codes that define where the instances
                        should be deployed.
                      items:
                        type: string
                      type: array
                    name:
                      description: The name of the placement
                      type: string
                    scaleSettings:
                      description: Scale settings such as minimum and maximum replica
                        counts.
                      properties:
                        instanceManagementPolicy:
                          default: OrderedReady
                          description: |-
                            Controls how instances are managed during scale up and down, as well as
                            during maintenance events.
                          type: string
                        maxReplicas:
                          description: The maximum number of replicas.
                          format: int32
                          type: integer
                        metrics:
                          description: A list of metrics that determine scaling behavior,
                            such as external metrics.
                          items:
                            properties:
                              resource:
                                description: Resource metrics known to Datum.
                                properties:
                                  name:
                                    description: The name of the resource in question.
                                    type: string
                                  target:
                                    description: The target value for the given metric
                                    properties:
                                      averageUtilization:
                                        description: |-
                                          The target value of the average of the
                                          resource metric across all relevant instances, represented as a percentage of
                                          the requested value of the resource for the instances.
                                        format: int32
                                        type: integer
                                      averageValue:
                                        anyOf:
                                        - type: integer
                                        - type: string
                                        description: |-
                                          The target value of the average of the metric across all relevant instances
                                          (as a quantity)
                                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                        x-kubernetes-int-or-string: true
                                      value:
                                        anyOf:
                                        - type: integer
                                        - type: string
                                        description: The target value of the metric
                                          (as a quantity).
                                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                        x-kubernetes-int-or-string: true
                                    type: object
                                required:
                                - name
                                - target
                                type: object
                            type: object
                          type: array
                        minReplicas:
                          description: The minimum number of replicas.
                          format: int32
                          type: integer
                      required:
                      - instanceManagementPolicy
                      - minReplicas
                      type: object
                  required:
                  - cityCodes
                  - name
                  - scaleSettings
                  type: object
                minItems: 1
                type: array
              template:
                description: Defines settings for each instance.
                properties:
                  metadata:
                    description: Metadata of the instances created from this template
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        type: object
                      finalizers:
                        items:
                          type: string
                        type: array
                      labels:
                        additionalProperties:
                          type: string
                        type: object
                      name:
                        type: string
                      namespace:
                        type: string
                    type: object
                  spec:
                    description: Describes the desired configuration of an instance
                    properties:
                      controller:
                        description: Controller contains settings driven by the controller
                          managing the instance.
                        properties:
                          schedulingGates:
                            description: |-
                              SchedulingGates is a list of gates that must be satisfied before the
                              instance can be scheduled.
                            items:
                              properties:
                                name:
                                  description: The name of the gate.
                                  type: string
                              required:
                              - name
                              type: object
                            type: array
                            x-kubernetes-list-map-keys:
                            - name
                            x-kubernetes-list-type: map
                          templateHash:
                            description: TemplateHash is the hash of the instance
                              template applied for this instance.
                            type: string
                        required:
                        - templateHash
                        type: object
                      location:
                        description: The location which the instance has been scheduled
                          to
                        properties:
                          name:
                            description: Name of a datum location
                            type: string
                          namespace:
                            description: Namespace for the datum location
                            type: string
                        required:
                        - name
                        - namespace
                        type: object
                      networkInterfaces:
                        description: Network interface configuration.
                        items:
                          properties:
                            network:
                              description: The network to attach the network interface
                                to.
                              properties:
                                name:
                                  description: The network name
                                  type: string
                                namespace:
                                  description: |-
                                    The network namespace.

                                    Defaults to the namespace for the type the reference is embedded in.
                                  type: string
                              required:
                              - name
                              type: object
                            networkPolicy:
                              description: |-
                                Interface specific network policy.

                                If provided, this will result in a platform managed network policy being
                                created that targets the specfiic instance interface. This network policy
                                will be of the lowest priority, and can effectively be prohibited from
                                influencing network connectivity.
                              properties:
                                ingress:
                                  items:
                                    description: See k8s network policy types for
                                      inspiration here
                                    properties:
                                      from:
                                        description: |-
                                          from is a list of sources which should be able to access the instances selected for this rule.
                                          Items in this list are combined using a logical OR operation. If this field is
                                          empty or missing, this rule matches all sources (traffic not restricted by
                                          source). If this field is present and contains at least one item, this rule
                                          allows traffic only if the traffic matches at least one item in the from list.
                                        items:
                                          description: |-
                                            NetworkPolicyPeer describes a peer to allow traffic to/from. Only certain combinations of
                                            fields are allowed
                                          properties:
                                            ipBlock:
                                              description: |-
                                                ipBlock defines policy on a particular IPBlock. If this field is set then
                                                neither of the other fields can be.
                                              properties:
                                                cidr:
                                                  description: |-
                                                    cidr is a string representing the IPBlock
                                                    Valid examples are "192.168.1.0/24" or "2001:db8::/64"
                                                  type: string
                                                except:
                                                  description: |-
                                                    except is a slice of CIDRs that should not be included within an IPBlock
                                                    Valid examples are "192.168.1.0/24" or "2001:db8::/64"
                                                    Except values will be rejected if they are outside the cidr range
                                                  items:
                                                    type: string
                                                  type: array
                                                  x-kubernetes-list-type: atomic
                                              required:
                                              - cidr
                                              type: object
                                          type: object
                                        type: array
                                        x-kubernetes-list-type: atomic
                                      ports:
                                        description: |-
                                          ports is a list of ports which should be made accessible on the instances selected for
                                          this rule. Each item in this list is combined using a logical OR. If this field is
                                          empty or missing, this rule matches all ports (traffic not restricted by port).
                                          If this field is present and contains at least one item, then this rule allows
                                          traffic only if the traffic matches at least one port in the list.
                                        items:
                                          description: NetworkPolicyPort describes
                                            a port to allow traffic on
                                          properties:
                                            endPort:
                                              description: |-
                                                endPort indicates that the range of ports from port to endPort if set, inclusive,
                                                should be allowed by the policy. This field cannot be defined if the port field
                                                is not defined or if the port field is defined as a named (string) port.
                                                The endPort must be equal or greater than port.
                                              format: int32
                                              type: integer
                                            port:
                                              anyOf:
                                              - type: integer
                                              - type: string
                                              description: |-
                                                port represents the port on the given protocol. This can either be a numerical or named
                                                port on an instance. If this field is not provided, this matches all port names and
                                                numbers.
                                                If present, only traffic on the specified protocol AND port will be matched.
                                              x-kubernetes-int-or-string: true
                                            protocol:
                                              description: |-
                                                protocol represents the protocol (TCP, UDP, or SCTP) which traffic must match.
                                                If not specified, this field defaults to TCP.
                                              type: string
                                          type: object
                                        type: array
                                        x-kubernetes-list-type: atomic
                                    type: object
                                  type: array
                              type: object
                          required:
                          - network
                          type: object
                        minItems: 1
                        type: array
                      runtime:
                        description: The runtime type of the instance, such as a container
                          sandbox or a VM.
                        properties:
                          resources:
                            description: |-
                              Resources each instance must be allocated.

                              A sandbox runtime's containers may specify resource requests and
                              limits. When limits are defined on all containers, they MUST consume
                              the entire amount of resources defined here. Some resources, such
                              as a GPU, MUST have at least one container request them so that the
                              device can be presented appropriately.

                              A virtual machine runtime will be provided all requested resources.
                            properties:
                              instanceType:
                                description: |-
                                  Full or partial URL of the instance type resource to use for this instance.

                                  For example: `datumcloud/d1-standard-2`

                                  May be combined with `resources` to allow for custom instance types for
                                  instance families that support customization. Instance types which support
                                  customization will appear in the form `<project>/<instanceFamily>-custom`.
                                type: string
                              requests:
                                additionalProperties:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                                description: Describes adjustments to the resources
                                  defined by the instance type.
                                type: object
                            required:
                            - instanceType
                            type: object
                          sandbox:
                            description: A sandbox is a managed isolated environment
                              capable of running containers.
                            properties:
                              containers:
                                description: A list of containers to run within the
                                  sandbox.
                                items:
                                  properties:
                                    env:
                                      description: |-
                                        List of environment variables to set in the container.

                                        so replicate the structure here too.
                                      items:
                                        description: EnvVar represents an environment
                                          variable present in a Container.
                                        properties:
                                          name:
                                            description: Name of the environment variable.
                                              Must be a C_IDENTIFIER.
                                            type: string
                                          value:
                                            description: |-
                                              Variable references $(VAR_NAME) are expanded
                                              using the previously defined environment variables in the container and
                                              any service environment variables. If a variable cannot be resolved,
                                              the reference in the input string will be unchanged. Double $$ are reduced
                                              to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.
                                              "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)".
                                              Escaped references will never be expanded, regardless of whether the variable
                                              exists or not.
                                              Defaults to "".
                                            type: string
                                          valueFrom:
                                            description: Source for the environment
                                              variable's value. Cannot be used if
                                              value is not empty.
                                            properties:
                                              configMapKeyRef:
                                                description: Selects a key of a ConfigMap.
                                                properties:
                                                  key:
                                                    description: The key to select.
                                                    type: string
                                                  name:
                                                    default: ""
                                                    description: |-
                                                      Name of the referent.
                                                      This field is effectively required, but due to backwards compatibility is
                                                      allowed to be empty. Instances of this type with an empty value here are
                                                      almost certainly wrong.
                                                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                    type: string
                                                  optional:
                                                    description: Specify whether the
                                                      ConfigMap or its key must be
                                                      defined
                                                    type: boolean
                                                required:
                                                - key
                                                type: object
                                                x-kubernetes-map-type: atomic
                                              fieldRef:
                                                description: |-
                                                  Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`,
                                                  spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.
                                                properties:
                                                  apiVersion:
                                                    description: Version of the schema
                                                      the FieldPath is written in
                                                      terms of, defaults to "v1".
                                                    type: string
                                                  fieldPath:
                                                    description: Path of the field
                                                      to select in the specified API
                                                      version.
                                                    type: string
                                                required:
                                                - fieldPath
                                                type: object
                                                x-kubernetes-map-type: atomic
                                              resourceFieldRef:
                                                description: |-
                                                  Selects a resource of the container: only resources limits and requests
                                                  (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.
                                                properties:
                                                  containerName:
                                                    description: 'Container name:
                                                      required for volumes, optional
                                                      for env vars'
                                                    type: string
                                                  divisor:
                                                    anyOf:
                                                    - type: integer
                                                    - type: string
                                                    description: Specifies the output
                                                      format of the exposed resources,
                                                      defaults to "1"
                                                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                    x-kubernetes-int-or-string: true
                                                  resource:
                                                    description: 'Required: resource
                                                      to select'
                                                    type: string
                                                required:
                                                - resource
                                                type: object
                                                x-kubernetes-map-type: atomic
                                              secretKeyRef:
                                                description: Selects a key of a secret
                                                  in the pod's namespace
                                                properties:
                                                  key:
                                                    description: The key of the secret
                                                      to select from.  Must be a valid
                                                      secret key.
                                                    type: string
                                                  name:
                                                    default: ""
                                                    description: |-
                                                      Name of the referent.
                                                      This field is effectively required, but due to backwards compatibility is
                                                      allowed to be empty. Instances of this type with an empty value here are
                                                      almost certainly wrong.
                                                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                    type: string
                                                  optional:
                                                    description: Specify whether the
                                                      Secret or its key must be defined
                                                    type: boolean
                                                required:
                                                - key
                                                type: object
                                                x-kubernetes-map-type: atomic
                                            type: object
                                        required:
                                        - name
                                        type: object
                                      type: array
                                      x-kubernetes-list-map-keys:
                                      - name
                                      x-kubernetes-list-type: map
                                    image:
                                      description: The fully qualified container image
                                        name.
                                      type: string
                                    name:
                                      description: The name of the container.
                                      type: string
                                    ports:
                                      description: A list of named ports for the container.
                                      items:
                                        properties:
                                          name:
                                            description: The name of the port that
                                              can be referenced by other platform
                                              features.
                                            type: string
                                          port:
                                            description: The port number, which can
                                              be a value between 1 and 65535.
                                            format: int32
                                            maximum: 65535
                                            minimum: 1
                                            type: integer
                                          protocol:
                                            description: |-
                                              protocol represents the protocol (TCP, UDP, or SCTP) which traffic must match.
                                              If not specified, this field defaults to TCP.
                                            type: string
                                        required:
                                        - name
                                        - port
                                        type: object
                                      type: array
                                      x-kubernetes-list-map-keys:
                                      - name
                                      x-kubernetes-list-type: map
                                    resources:
                                      description: The resource requirements for the
                                        container, such as CPU, memory, and GPUs.
                                      properties:
                                        limits:
                                          additionalProperties:
                                            anyOf:
                                            - type: integer
                                            - type: string
                                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                            x-kubernetes-int-or-string: true
                                          description: Limits describes the maximum
                                            amount of compute resources allowed.
                                          type: object
                                        requests:
                                          additionalProperties:
                                            anyOf:
                                            - type: integer
                                            - type: string
                                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                            x-kubernetes-int-or-string: true
                                          description: Requests describes the minimum
                                            amount of compute resources required.
                                          type: object
                                      type: object
                                    volumeAttachments:
                                      description: A list of volumes to attach to
                                        the container.
                                      items:
                                        properties:
                                          mountPath:
                                            description: |-
                                              The path to mount the volume inside the guest OS.

                                              The referenced volume must be populated with a filesystem to use this
                                              feature.

                                              For VM based instances, this functionality requires certain capabilities
                                              to be annotated on the boot image, such as cloud-init.
                                            type: string
                                          name:
                                            description: The name of the volume to
                                              attach as defined in InstanceSpec.Volumes.
                                            type: string
                                        required:
                                        - name
                                        type: object
                                      type: array
                                  required:
                                  - image
                                  - name
                                  type: object
                                minItems: 1
                                type: array
                                x-kubernetes-list-map-keys:
                                - name
                                x-kubernetes-list-type: map
                              imagePullSecrets:
                                description: |-
                                  An optional list of secrets in the same namespace to use for pulling images
                                  used by the instance.
                                items:
                                  description: |-
                                    References a secret in the same namespace as the entity defining the
                                    reference.
                                  properties:
                                    name:
                                      description: The name of the secret
                                      type: string
                                  required:
                                  - name
                                  type: object
                                type: array
                            required:
                            - containers
                            type: object
                          virtualMachine:
                            description: A virtual machine is a classical VM environment,
                              booting a full OS provided by the user via an image.
                            properties:
                              ports:
                                description: A list of named ports for the virtual
                                  machine.
                                items:
                                  properties:
                                    name:
                                      description: The name of the port that can be
                                        referenced by other platform features.
                                      type: string
                                    port:
                                      description: The port number, which can be a
                                        value between 1 and 65535.
                                      format: int32
                                      maximum: 65535
                                      minimum: 1
                                      type: integer
                                    protocol:
                                      description: |-
                                        protocol represents the protocol (TCP, UDP, or SCTP) which traffic must match.
                                        If not specified, this field defaults to TCP.
                                      type: string
                                  required:
                                  - name
                                  - port
                                  type: object
                                type: array
                                x-kubernetes-list-map-keys:
                                - name
                                x-kubernetes-list-type: map
                              volumeAttachments:
                                description: A list of volumes to attach to the VM.
                                items:
                                  properties:
                                    mountPath:
                                      description: |-
                                        The path to mount the volume inside the guest OS.

                                        The referenced volume must be populated with a filesystem to use this
                                        feature.

                                        For VM based instances, this functionality requires certain capabilities
                                        to be annotated on the boot image, such as cloud-init.
                                      type: string
                                    name:
                                      description: The name of the volume to attach
                                        as defined in InstanceSpec.Volumes.
                                      type: string
                                  required:
                                  - name
                                  type: object
                                minItems: 1
                                type: array
                            required:
                            - volumeAttachments
                            type: object
                        required:
                        - resources
                        type: object
                      volumes:
                        description: |-
                          Volumes that must be available to attach to an instance's containers or
                          Virtual Machine.
                        items:
                          properties:
                            configMap:
                              description: A configMap that should populate this volume
                              properties:
                                defaultMode:
                                  description: |-
                                    defaultMode is optional: mode bits used to set permissions on created files by default.
                                    Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
                                    YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
                                    Defaults to 0644.
                                    Directories within the path are not affected by this setting.
                                    This might be in conflict with other options that affect the file
                                    mode, like fsGroup, and the result can be other mode bits set.
                                  format: int32
                                  type: integer
                                items:
                                  description: |-
                                    items if unspecified, each key-value pair in the Data field of the referenced
                                    ConfigMap will be projected into the volume as a file whose name is the
                                    key and content is the value. If specified, the listed keys will be
                                    projected into the specified paths, and unlisted keys will not be
                                    present. If a key is specified which is not present in the ConfigMap,
                                    the volume setup will error unless it is marked optional. Paths must be
                                    relative and may not contain the '..' path or start with '..'.
                                  items:
                                    description: Maps a string key to a path within
                                      a volume.
                                    properties:
                                      key:
                                        description: key is the key to project.
                                        type: string
                                      mode:
                                        description: |-
                                          mode is Optional: mode bits used to set permissions on this file.
                                          Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
                                          YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
                                          If not specified, the volume defaultMode will be used.
                                          This might be in conflict with other options that affect the file
                                          mode, like fsGroup, and the result can be other mode bits set.
                                        format: int32
                                        type: integer
                                      path:
                                        description: |-
                                          path is the relative path of the file to map the key to.
                                          May not be an absolute path.
                                          May not contain the path element '..'.
                                          May not start with the string '..'.
                                        type: string
                                    required:
                                    - key
                                    - path
                                    type: object
                                  type: array
                                  x-kubernetes-list-type: atomic
                                name:
                                  default: ""
                                  description: |-
                                    Name of the referent.
                                    This field is effectively required, but due to backwards compatibility is
                                    allowed to be empty. Instances of this type with an empty value here are
                                    almost certainly wrong.
                                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  type: string
                                optional:
                                  description: optional specify whether the ConfigMap
                                    or its keys must be defined
                                  type: boolean
                              type: object
                              x-kubernetes-map-type: atomic
                            disk:
                              description: A persistent disk backed volume.
                              properties:
                                deviceName:
                                  description: |-
                                    Specifies a unique device name that is reflected into the
                                    `/dev/disk/by-id/datumcloud-*` tree of a Linux operating system
                                    running within the instance. This name can be used to reference
                                    the device for mounting, resizing, and so on, from within the
                                    instance.

                                    If not specified, the server chooses a default device name to
                                    apply to this disk, in the form persistent-disk-x, where x is a
                                    number assigned by Datum Cloud.
                                  type: string
                                template:
                                  description: Settings to create a new disk for an
                                    attached disk
                                  properties:
                                    metadata:
                                      description: Metadata of the disks created from
                                        this template
                                      properties:
                                        annotations:
                                          additionalProperties:
                                            type: string
                                          type: object
                                        finalizers:
                                          items:
                                            type: string
                                          type: array
                                        labels:
                                          additionalProperties:
                                            type: string
                                          type: object
                                        name:
                                          type: string
                                        namespace:
                                          type: string
                                      type: object
                                    spec:
                                      description: Describes the desired configuration
                                        of a disk
                                      properties:
                                        populator:
                                          description: Populator to use while initializing
                                            the disk.
                                          properties:
                                            filesystem:
                                              description: Populate the disk with
                                                a filesystem
                                              properties:
                                                type:
                                                  description: The type of filesystem
                                                    to populate the disk with.
                                                  enum:
                                                  - ext4
                                                  type: string
                                              required:
                                              - type
                                              type: object
                                            image:
                                              description: Populate the disk from
                                                an image
                                              properties:
                                                name:
                                                  description: "The name of the image
                                                    to populate the disk with.\n\n\tin
                                                    `populator.image.imageRef.name`
                                                    though."
                                                  type: string
                                              required:
                                              - name
                                              type: object
                                          type: object
                                        resources:
                                          description: The resource requirements for
                                            the disk.
                                          properties:
                                            requests:
                                              additionalProperties:
                                                anyOf:
                                                - type: integer
                                                - type: string
                                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                x-kubernetes-int-or-string: true
                                              description: Requests describes the
                                                minimum amount of storage resources
                                                required.
                                              type: object
                                          type: object
                                        type:
                                          default: pd-standard
                                          description: The type the disk, such as
                                            `pd-standard`.
                                          type: string
                                      type: object
                                  required:
                                  - spec
                                  type: object
                              required:
                              - template
                              type: object
                            name:
                              description: |-
                                Name is used to reference the volume in `volumeAttachments` for
                                containers and VMs, and will be used to derive the platform resource
                                name when required by prefixing this name with the instance name upon
                                creation.
                              type: string
                            secret:
                              description: A secret that should populate this volume
                              properties:
                                defaultMode:
                                  description: |-
                                    defaultMode is Optional: mode bits used to set permissions on created files by default.
                                    Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
                                    YAML accepts both octal and decimal values, JSON requires decimal values
                                    for mode bits. Defaults to 0644.
                                    Directories within the path are not affected by this setting.
                                    This might be in conflict with other options that affect the file
                                    mode, like fsGroup, and the result can be other mode bits set.
                                  format: int32
                                  type: integer
                                items:
                                  description: |-
                                    items If unspecified, each key-value pair in the Data field of the referenced
                                    Secret will be projected into the volume as a file whose name is the
                                    key and content is the value. If specified, the listed keys will be
                                    projected into the specified paths, and unlisted keys will not be
                                    present. If a key is specified which is not present in the Secret,
                                    the volume setup will error unless it is marked optional. Paths must be
                                    relative and may not contain the '..' path or start with '..'.
                                  items:
                                    description: Maps a string key to a path within
                                      a volume.
                                    properties:
                                      key:
                                        description: key is the key to project.
                                        type: string
                                      mode:
                                        description: |-
                                          mode is Optional: mode bits used to set permissions on this file.
                                          Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
                                          YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
                                          If not specified, the volume defaultMode will be used.
                                          This might be in conflict with other options that affect the file
                                          mode, like fsGroup, and the result can be other mode bits set.
                                        format: int32
                                        type: integer
                                      path:
                                        description: |-
                                          path is the relative path of the file to map the key to.
                                          May not be an absolute path.
                                          May not contain the path element '..'.
                                          May not start with the string '..'.
                                        type: string
                                    required:
                                    - key
                                    - path
                                    type: object
                                  type: array
                                  x-kubernetes-list-type: atomic
                                optional:
                                  description: optional field specify whether the
                                    Secret or its keys must be defined
                                  type: boolean
                                secretName:
                                  description: |-
                                    secretName is the name of the secret in the pod's namespace to use.
                                    More info: https://kubernetes.io/docs/concepts/storage/volumes#secret
                                  type: string
                              type: object
                          required:
                          - name
                          type: object
                        type: array
                        x-kubernetes-list-map-keys:
                        - name
                        x-kubernetes-list-type: map
                    required:
                    - networkInterfaces
                    - runtime
                    type: object
                required:
                - spec
                type: object
            required:
            - placements
            - template
            type: object
          status:
            description: WorkloadStatus defines the observed state of Workload
            properties:
              conditions:
                description: |-
                  Represents the observations of a workload's current state.
                  Known condition types are: "Available", "Progressing"
                items:
                  description: Condition contains details for one aspect of the current
                    state of this API Resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              currentReplicas:
                description: The number of instances which have the latest workload
                  settings applied.
                format: int32
                type: integer
              deployments:
                description: The number of deployments that currently exist
                format: int32
                type: integer
              desiredReplicas:
                description: The desired number of instances
                format: int32
                type: integer
              gateway:
                description: The status of the workload gateway if configured.
                properties:
                  addresses:
                    description: |-
                      Addresses lists the network addresses that have been bound to the
                      Gateway.

                      This list may differ from the addresses provided in the spec under some
                      conditions:

                        * no addresses are specified, all addresses are dynamically assigned
                        * a combination of specified and dynamic addresses are assigned
                        * a specified address was unusable (e.g. already in use)

                      <gateway:validateIPAddress>
                    items:
                      description: GatewayStatusAddress describes a network address
                        that is bound to a Gateway.
                      properties:
                        type:
                          default: IPAddress
                          description: Type of the address.
                          maxLength: 253
                          minLength: 1
                          pattern: ^Hostname|IPAddress|NamedAddress|[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*\/[A-Za-z0-9\/\-._~%!$&'()*+,;=:]+$
                          type: string
                        value:
                          description: |-
                            Value of the address. The validity of the values will depend
                            on the type and support by the controller.

                            Examples: `1.2.3.4`, `128::1`, `my-ip-address`.
                          maxLength: 253
                          minLength: 1
                          type: string
                      required:
                      - value
                      type: object
                      x-kubernetes-validations:
                      - message: Hostname value must only contain valid characters
                          (matching ^(\*\.)?[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$)
                        rule: 'self.type == ''Hostname'' ? self.value.matches(r"""^(\*\.)?[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$"""):
                          true'
                    maxItems: 16
                    type: array
                  conditions:
                    default:
                    - lastTransitionTime: "1970-01-01T00:00:00Z"
                      message: Waiting for controller
                      reason: Pending
                      status: Unknown
                      type: Accepted
                    - lastTransitionTime: "1970-01-01T00:00:00Z"
                      message: Waiting for controller
                      reason: Pending
                      status: Unknown
                      type: Programmed
                    description: |-
                      Conditions describe the current conditions of the Gateway.

                      Implementations should prefer to express Gateway conditions
                      using the `GatewayConditionType` and `GatewayConditionReason`
                      constants so that operators and tools can converge on a common
                      vocabulary to describe Gateway state.

                      Known condition types are:

                      * "Accepted"
                      * "Programmed"
                      * "Ready"
                    items:
                      description: Condition contains details for one aspect of the
                        current state of this API Resource.
                      properties:
                        lastTransitionTime:
                          description: |-
                            lastTransitionTime is the last time the condition transitioned from one status to another.
                            This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                          format: date-time
                          type: string
                        message:
                          description: |-
                            message is a human readable message indicating details about the transition.
                            This may be an empty string.
                          maxLength: 32768
                          type: string
                        observedGeneration:
                          description: |-
                            observedGeneration represents the .metadata.generation that the condition was set based upon.
                            For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                            with respect to the current state of the instance.
                          format: int64
                          minimum: 0
                          type: integer
                        reason:
                          description: |-
                            reason contains a programmatic identifier indicating the reason for the condition's last transition.
                            Producers of specific condition types may define expected values and meanings for this field,
                            and whether the values are considered a guaranteed API.
                            The value should be a CamelCase string.
                            This field may not be empty.
                          maxLength: 1024
                          minLength: 1
                          pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                          type: string
                        status:
                          description: status of the condition, one of True, False,
                            Unknown.
                          enum:
                          - "True"
                          - "False"
                          - Unknown
                          type: string
                        type:
                          description: type of condition in CamelCase or in foo.example.com/CamelCase.
                          maxLength: 316
                          pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                          type: string
                      required:
                      - lastTransitionTime
                      - message
                      - reason
                      - status
                      - type
                      type: object
                    maxItems: 8
                    type: array
                    x-kubernetes-list-map-keys:
                    - type
                    x-kubernetes-list-type: map
                  listeners:
                    description: Listeners provide status for each unique listener
                      port defined in the Spec.
                    items:
                      description: ListenerStatus is the status associated with a
                        Listener.
                      properties:
                        attachedRoutes:
                          description: |-
                            AttachedRoutes represents the total number of Routes that have been
                            successfully attached to this Listener.

                            Successful attachment of a Route to a Listener is based solely on the
                            combination of the AllowedRoutes field on the corresponding Listener
                            and the Route's ParentRefs field. A Route is successfully attached to
                            a Listener when it is selected by the Listener's AllowedRoutes field
                            AND the Route has a valid ParentRef selecting the whole Gateway
                            resource or a specific Listener as a parent resource (more detail on
                            attachment semantics can be found in the documentation on the various
                            Route kinds ParentRefs fields). Listener or Route status does not impact
                            successful attachment, i.e. the AttachedRoutes field count MUST be set
                            for Listeners with condition Accepted: false and MUST count successfully
                            attached Routes that may themselves have Accepted: false conditions.

                            Uses for this field include troubleshooting Route attachment and
                            measuring blast radius/impact of changes to a Listener.
                          format: int32
                          type: integer
                        conditions:
                          description: Conditions describe the current condition of
                            this listener.
                          items:
                            description: Condition contains details for one aspect
                              of the current state of this API Resource.
                            properties:
                              lastTransitionTime:
                                description: |-
                                  lastTransitionTime is the last time the condition transitioned from one status to another.
                                  This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                                format: date-time
                                type: string
                              message:
                                description: |-
                                  message is a human readable message indicating details about the transition.
                                  This may be an empty string.
                                maxLength: 32768
                                type: string
                              observedGeneration:
                                description: |-
                                  observedGeneration represents the .metadata.generation that the condition was set based upon.
                                  For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                                  with respect to the current state of the instance.
                                format: int64
                                minimum: 0
                                type: integer
                              reason:
                                description: |-
                                  reason contains a programmatic identifier indicating the reason for the condition's last transition.
                                  Producers of specific condition types may define expected values and meanings for this field,
                                  and whether the values are considered a guaranteed API.
                                  The value should be a CamelCase string.
                                  This field may not be empty.
                                maxLength: 1024
                                minLength: 1
                                pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                                type: string
                              status:
                                description: status of the condition, one of True,
                                  False, Unknown.
                                enum:
                                - "True"
                                - "False"
                                - Unknown
                                type: string
                              type:
                                description: type of condition in CamelCase or in
                                  foo.example.com/CamelCase.
                                maxLength: 316
                                pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                                type: string
                            required:
                            - lastTransitionTime
                            - message
                            - reason
                            - status
                            - type
                            type: object
                          maxItems: 8
                          type: array
                          x-kubernetes-list-map-keys:
                          - type
                          x-kubernetes-list-type: map
                        name:
                          description: Name is the name of the Listener that this
                            status corresponds to.
                          maxLength: 253
                          minLength: 1
                          pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                          type: string
                        supportedKinds:
                          description: |-
                            SupportedKinds is the list indicating the Kinds supported by this
                            listener. This MUST represent the kinds an implementation supports for
                            that Listener configuration.

                            If kinds are specified in Spec that are not supported, they MUST NOT
                            appear in this list and an implementation MUST set the "ResolvedRefs"
                            condition to "False" with the "InvalidRouteKinds" reason. If both valid
                            and invalid Route kinds are specified, the implementation MUST
                            reference the valid Route kinds that have been specified.
                          items:
                            description: RouteGroupKind indicates the group and kind
                              of a Route resource.
                            properties:
                              group:
                                default: gateway.networking.k8s.io
                                description: Group is the group of the Route.
                                maxLength: 253
                                pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                type: string
                              kind:
                                description: Kind is the kind of the Route.
                                maxLength: 63
                                minLength: 1
                                pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                                type: string
                            required:
                            - kind
                            type: object
                          maxItems: 8
                          type: array
                      required:
                      - attachedRoutes
                      - conditions
                      - name
                      - supportedKinds
                      type: object
                    maxItems: 64
                    type: array
                    x-kubernetes-list-map-keys:
                    - name
                    x-kubernetes-list-type: map
                type: object
              placements:
                description: The current status of placemetns in a workload.
                items:
                  properties:
                    conditions:
                      description: |-
                        Represents the observations of a placement's current state.
                        Known condition types are: "Available", "Progressing"
                      items:
                        description: Condition contains details for one aspect of
                          the current state of this API Resource.
                        properties:
                          lastTransitionTime:
                            description: |-
                              lastTransitionTime is the last time the condition transitioned from one status to another.
                              This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                            format: date-time
                            type: string
                          message:
                            description: |-
                              message is a human readable message indicating details about the transition.
                              This may be an empty string.
                            maxLength: 32768
                            type: string
                          observedGeneration:
                            description: |-
                              observedGeneration represents the .metadata.generation that the condition was set based upon.
                              For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                              with respect to the current state of the instance.
                            format: int64
                            minimum: 0
                            type: integer
                          reason:
                            description: |-
                              reason contains a programmatic identifier indicating the reason for the condition's last transition.
                              Producers of specific condition types may define expected values and meanings for this field,
                              and whether the values are considered a guaranteed API.
                              The value should be a CamelCase string.
                              This field may not be empty.
                            maxLength: 1024
                            minLength: 1
                            pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                            type: string
                          status:
                            description: status of the condition, one of True, False,
                              Unknown.
                            enum:
                            - "True"
                            - "False"
                            - Unknown
                            type: string
                          type:
                            description: type of condition in CamelCase or in foo.example.com/CamelCase.
                            maxLength: 316
                            pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                            type: string
                        required:
                        - lastTransitionTime
                        - message
                        - reason
                        - status
                        - type
                        type: object
                      type: array
                    currentReplicas:
                      description: The number of instances which have the latest workload
                        settings applied.
                      format: int32
                      type: integer
                    desiredReplicas:
                      description: The desired number of instances
                      format: int32
                      type: integer
                    name:
                      description: The name of the placement
                      type: string
                    readyReplicas:
                      description: The number of instances which are ready.
                      format: int32
                      type: integer
                    replicas:
                      description: The number of instances that currently exist
                      format: int32
                      type: integer
                  required:
                  - currentReplicas
                  - desiredReplicas
                  - name
                  - readyReplicas
                  - replicas
                  type: object
                type: array
              readyReplicas:
                description: The number of instances which are ready.
                format: int32
                type: integer
              replicas:
                description: The number of instances that currently exist
                format: int32
                type: integer
            required:
            - currentReplicas
            - deployments
            - desiredReplicas
            - readyReplicas
            - replicas
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
